{"version":3,"sources":["Assets/Img/instagram.svg","Utils/index.js","Containers/AccountTabs/index.js","Containers/HorizontalMenu/index.js","Components/Input/index.js","Containers/Header/index.js","Components/Button/index.js","Components/Avatar/index.js","Components/Post/index.js","Pages/Public/Posts/index.js","Pages/Public/HistoricStats/index.js","Pages/Public/Demographics/index.js","Components/Card/index.js","Components/PieChart/index.js","Pages/Public/Hashtag/index.js","Pages/Public/Engagement/index.js","App.js","reportWebVitals.js","index.js"],"names":["utils","getNumber","number","result","round","getHashtagFromPost","posts","aux","i","length","aux2","caption","split","num","decimales","signo","Math","toString","formatDate","date","dateToReturn","newDate","Date","hour","parseInt","hours","getMonth","getDate","getFullYear","getMinutes","error","replaceAll","string","search","replace","join","TitleWrapper","styled","div","TabsWrapper","EngagementValues","min","max","percent","TabPane","Tabs","AccountTabs","accounts","useState","activeKey","state","setState","hideAdd","onChange","type","map","pane","index","tab","data","className","src","profile_picture_url","alt","username","ig","name","style","whiteSpace","biography","href","website","target","followers_count","follows_count","media_count","engagement","width","status","format","flag","defaultProps","options","title","url","HorizontalMenuWrapper","HorizontalMenu","option","to","activeClassName","exact","InputWrapper","input","Input","placeholder","e","value","HeaderWrapper","Header","event","console","log","axios","method","query","then","catch","ButtonWrapper","Button","children","onClick","AvatarWrapper","Avatar","userName","PostWrapper","Post","avatar","timestamp","media_type","media_url","controls","PostsWrapper","Posts","postCount","setPostCount","gutter","slice","xs","span","md","lg","HistoricStatsWrapper","columns","dataIndex","key","render","item","diference","count","prev_count","HistoricStats","stats","Utils","following_count","reverse","dataSource","DemographicsWrapper","Demographics","CardWrapper","Card","PieWrapper","colors","PieChart","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","config","labels","datasets","label","backgroundColor","hoverOffset","legend","position","cutoutPercentage","height","HashtagWrapper","Hashtag","hashtag","display","hashtag_count","EngagementWrapper","Engagement","App","useEffect","headers","business_discovery","media","push","padding","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e883f910.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.c1cb19ae.svg\";","const utils = {\r\n    getNumber: (number) => {\r\n        let result=0;\r\n        if(number>=1000 && number<1000000) {\r\n            result = number/1000;\r\n            result = utils.round(result, 1);\r\n            return `${result} K`;\r\n        }\r\n        if(number>=1000000){\r\n            result = number/1000000;\r\n            result = utils.round(result, 1);\r\n            return `${result} M`;\r\n        }\r\n        return number;\r\n    },\r\n    getHashtagFromPost: (posts) => {\r\n        let aux = [];\r\n        for(let i=0;i<posts.length;i++){\r\n            let aux2 = posts[i].caption.split('#');\r\n            aux = [...aux, aux2];\r\n        }\r\n        return aux;\r\n    },\r\n    round: (num, decimales = 2) => {\r\n        var signo = (num >= 0 ? 1 : -1);\r\n        num = num * signo;\r\n        if (decimales === 0) //con 0 decimales\r\n            return signo * Math.round(num);\r\n        // round(x * 10 ^ decimales)\r\n        num = num.toString().split('e');\r\n        num = Math.round(+(num[0] + 'e' + (num[1] ? (+num[1] + decimales) : decimales)));\r\n        // x * 10 ^ (-decimales)\r\n        num = num.toString().split('e');\r\n        return signo * (num[0] + 'e' + (num[1] ? (+num[1] - decimales) : -decimales));\r\n    },\r\n    formatDate: (date) => {\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ];\r\n        let dateToReturn;\r\n        try {\r\n            let newDate = new Date(date);\r\n            let hour = parseInt(date.split('T')[1].split(':')[0])\r\n            let hours = (hour>12)?(hour-12):hour;\r\n            dateToReturn = `${months[newDate.getMonth()]} ${newDate.getDate()}, ${newDate.getFullYear()} ${hours}:${newDate.getMinutes()} ${(hour>12)?'PM':'AM'}`;\r\n            \r\n        } catch (error) {\r\n            dateToReturn = '';\r\n        }\r\n        return dateToReturn;\r\n    },\r\n    replaceAll: (string, search, replace) => {\r\n        if (string === null) return \"\";\r\n        return string.split(search).join(replace);\r\n    }\r\n}\r\n\r\nexport default utils;","import React,{ useState } from 'react';\r\nimport { Tabs, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport ig from '../../Assets/Img/instagram.svg';\r\nimport utils from '../../Utils';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;  \r\n    align-items: center;\r\n    .avatar-container {\r\n        width: 2em;\r\n        display: flex;\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n    }\r\n    .title {\r\n        font-weight: 600;\r\n        margin-left: .5em;\r\n    }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n    padding: 1em 0;\r\n    h3 {\r\n        font-size: 2.25em;\r\n        font-weight: 600;\r\n        margin: 0;\r\n    }\r\n    .tab-content {\r\n        background-color: #fff;\r\n        border-radius: 0 .75em .75em .75em;\r\n        padding: 3em;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .avatar-container {\r\n            position: relative;\r\n            width: min-content;\r\n            height: min-content;\r\n            >span {\r\n                border-radius: 50%;\r\n                overflow: hidden;\r\n                width: 12em;\r\n                display: flex;\r\n            }\r\n            .ig-logo {\r\n                width: 3em;\r\n                border-radius: 50%;\r\n                position: absolute;\r\n                bottom: 0;\r\n                right: 0;\r\n                border: 2px solid #fff;\r\n            }\r\n        }\r\n        .description {\r\n            padding: 0 2em 0 2em;\r\n            display: flex;\r\n            flex-direction: column;\r\n            color: var(--secondary-text-color);\r\n            font-size: 1.25em;\r\n            width: 60%;\r\n            .name {\r\n                color: var(--main-text-color)\r\n            }\r\n            .account {\r\n                display: flex;\r\n                align-items: center;\r\n                .type {\r\n                    padding: .25em 1em;\r\n                    background-color: var(--hastag-bg-color);\r\n                    color: var(--secondary-text-color);\r\n                    border-radius: .5em;\r\n                    height: max-content;\r\n                    margin-left: .5em;\r\n                }\r\n            }\r\n        }\r\n        .numbers-info {\r\n            .numbers {\r\n                display: flex;\r\n                h3 {\r\n                    display: block ruby; \r\n                }\r\n                >div {\r\n                    padding: 1em;\r\n                    span {\r\n                        color: var(--secondary-text-color);\r\n                    }\r\n                }\r\n            }\r\n            .engagement-data {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                >div {\r\n                    text-align: center;\r\n                    width: max-content;\r\n                }\r\n                .engagement-values {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    margin-top: 1em;\r\n                    font-weight: 600;\r\n                    width: max-content;\r\n                    .range-active {\r\n                        border: 1px solid var(--soft-border-color);\r\n                        border-radius: .25em;\r\n                        background-color: var(--hastag-bg-color);\r\n                        padding: .25em 1em;\r\n                        &.successfully{\r\n                            //border-color: var(--successfully-color);\r\n                        }\r\n                        &.error{\r\n                            //border-color: var(--error-color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .ant-tabs-top > .ant-tabs-nav, .ant-tabs-bottom > .ant-tabs-nav, .ant-tabs-top > div > .ant-tabs-nav, .ant-tabs-bottom > div > .ant-tabs-nav {\r\n        margin: 0;\r\n    }\r\n    .ant-tabs-card.ant-tabs-top > .ant-tabs-nav .ant-tabs-tab, .ant-tabs-card.ant-tabs-top > div > .ant-tabs-nav .ant-tabs-tab {\r\n        border-radius: .75em .75em 0 0 ;\r\n        padding: 1em;\r\n    }\r\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\r\n        color: var(--main-text-color);\r\n    }\r\n    .progress-children {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        .title {\r\n            font-size: .5em;\r\n        }\r\n        .value {\r\n            margin-bottom: .25em;\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst engagementValue = 2.4;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst AccountTabs = ({accounts}) => {\r\n\r\n    const [state, setState] = useState({\r\n        activeKey:'0'\r\n    });\r\n\r\n    const handleChange = (activeKey) => {\r\n        setState({...state, activeKey});\r\n    }\r\n\r\n    const userTabTitle = (data) => {\r\n        return (\r\n            <TitleWrapper>\r\n                <span className='avatar-container'>\r\n                    <img src={data.profile_picture_url} alt=''/>\r\n                </span>\r\n                <span className='title'>{data.username}</span>\r\n            </TitleWrapper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TabsWrapper>\r\n            <Tabs\r\n                hideAdd\r\n                onChange={handleChange}\r\n                activeKey={state.activeKey}\r\n                type=\"editable-card\"\r\n            >\r\n                {accounts.map((pane, index) => (\r\n                    <TabPane tab={userTabTitle(pane)} key={`${index}`}>\r\n                        <div className='tab-content'>\r\n                            <div className='avatar-container'>\r\n                                <span><img src={pane.profile_picture_url} alt=''/></span>\r\n                                <span className='ig-logo'><img src={ig} alt=''/></span>\r\n                            </div>\r\n                            <div className='description'>\r\n                                <span className='account'><h3>{pane.username}</h3><span className='type'>{pane.type}</span></span>\r\n                                <span className='name'>{pane.name}</span>\r\n                                <span  style={{whiteSpace:'pre-line'}}>{pane.biography}</span>\r\n                                <span><a href={pane.website} target='_blank'>{pane.website}</a></span>\r\n                            </div>\r\n                            <div className='numbers-info'>\r\n                                <div className='numbers'>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.followers_count)}</h3>\r\n                                        <span>Followers</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.follows_count)}</h3>\r\n                                        <span>Followings</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.media_count)}</h3>\r\n                                        <span>Posts</span> \r\n                                    </div>\r\n                                </div>\r\n                                <div className='engagement-data'>\r\n                                    <div>\r\n                                        <Progress type=\"circle\" percent={(utils.round(pane.engagement)/3.8)*100}  width={100} status={(((utils.round(pane.engagement)/3.8)*100)<100)?\"exception\":\"\"} format={()=><div className='progress-children'><span className='value'>{utils.round(pane.engagement)}</span><span className='title'>Engagement</span><span className='title'>rate</span></div>}/>\r\n                                        {/*<Progress type=\"circle\" percent={70} status=\"exception\" />*/}\r\n                                    </div>\r\n                                    <div className='engagement-values'>\r\n                                        {\r\n                                            EngagementValues.map((data, index)=>{\r\n                                                let flag = pane.followers_count>data.min && pane.followers_count<data.max;\r\n                                                return (\r\n                                                    <div key={index} className={flag?('range-active '+'error'):''}>\r\n                                                        {data.max>5000000000?`More than ${utils.getNumber(data.min)} followers: ${data.percent}`:`From ${utils.getNumber(data.min)} to ${utils.getNumber(data.max)} followers: ${data.percent}`}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                ))}\r\n            </Tabs>\r\n        </TabsWrapper>\r\n    )\r\n}\r\n\r\nAccountTabs.defaultProps = {\r\n    accounts:[],\r\n}\r\n\r\nexport default AccountTabs;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst options = [\r\n    {\r\n        title:'Overview',\r\n        url:'/'\r\n    },\r\n    {\r\n        title:'Demographics',\r\n        url:'/demographics'\r\n    },\r\n    {\r\n        title:'Engagement',\r\n        url:'/engagement'\r\n    },\r\n    {\r\n        title:'Mentions',\r\n        url:'/mentions'\r\n    },\r\n    {\r\n        title:'Hashtag',\r\n        url:'/hashtag'\r\n    },\r\n    {\r\n        title:'Historic Stats',\r\n        url:'/historic'\r\n    },\r\n    {\r\n        title:'Posts',\r\n        url:'/posts'\r\n    },\r\n]\r\n\r\nconst HorizontalMenuWrapper = styled.div`\r\n    padding: 0 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    margin-bottom: 1em;\r\n    display: flex;\r\n    .menu-item {\r\n        font-weight: 600;\r\n        width: max-content;\r\n        padding: 1em 1em;\r\n        margin: 0 .5em;\r\n        display: block ruby;\r\n        color: var(--main-text-color);\r\n    }\r\n    .menu-item-active {\r\n        border-bottom: 2px solid var(--main-color);\r\n    }\r\n\r\n`;\r\n\r\nconst HorizontalMenu = () => {\r\n    return (\r\n        <HorizontalMenuWrapper>\r\n            {options.map((option,index)=>\r\n                <NavLink key={index} to={option.url} activeClassName='menu-item-active' exact>\r\n                    <div className={'pointer menu-item'}>\r\n                        {option.title}\r\n                    </div>\r\n                </NavLink>\r\n            )}\r\n        </HorizontalMenuWrapper>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenu;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: .25em 1.5em;\r\n`;\r\n\r\nconst Input = ({placeholder, onChange}) => {\r\n\r\n    const hanldeChange = (e) => {\r\n        let value = e.target.value;\r\n        onChange({ value });\r\n    }\r\n\r\n    return (\r\n        <InputWrapper placeholder={placeholder} onChange={hanldeChange  }/>\r\n    )\r\n}\r\n\r\nInput.defaultProps = {\r\n    placeholder: '',\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Input from '../../Components/Input';\r\nimport axios from 'axios';\r\n\r\nconst HeaderWrapper = styled.div`\r\n\r\n    padding: 2em 4em;\r\n    background: var(--secondary-bg-color);\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .left-box {\r\n        display: flex;\r\n        .search-box {\r\n            margin-left: 1em;\r\n        }\r\n    }\r\n    .right-box {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n\r\n    const handleChange = (event) => {\r\n        const url='https://boiling-coast-31813.herokuapp.com/search';\r\n        console.log(event.value);\r\n        let { value } = event;\r\n        axios({\r\n            method: \"POST\",\r\n            url: url,\r\n            data: { query: value },\r\n        })\r\n        .then(data => {\r\n        console.log(data)\r\n        })\r\n        .catch((error)=>{\r\n        console.error(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <div className='left-box'>\r\n                <div>\r\n                    Logo\r\n                </div>\r\n                <div className='search-box'>\r\n                    <Input\r\n                        placeholder='Search accounts'\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='right-box'>\r\n                menu\r\n                <div>\r\n                    Avatar\r\n                </div>\r\n            </div>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button as ButtonAntd} from 'antd';\r\n\r\nconst ButtonWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    return (\r\n        <ButtonWrapper onClick={handleClick}>\r\n            <ButtonAntd>\r\n                { children }\r\n            </ButtonAntd>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ig from '../../Assets/Img/instagram.svg';\r\n\r\nconst AvatarWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    .avatar-image {\r\n        width: 3em;\r\n        height: 3em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    .ig-logo {\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        position: absolute;\r\n        left: 2.5em;\r\n        bottom: 0;\r\n    }\r\n    .user-name {\r\n        font-weight: 600;\r\n        margin-left: 1em;\r\n        font-size: 1em;\r\n    }\r\n`;\r\n\r\nconst Avatar = ({src, userName}) => {\r\n    return (\r\n        <AvatarWrapper>\r\n            <div className='avatar-image'>\r\n                <img src={src} alt='' />\r\n            </div>\r\n            <div className='ig-logo'>\r\n                <img src={ig} alt='' />\r\n            </div>\r\n            <div className='user-name'>{userName}</div>\r\n        </AvatarWrapper>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport utils from '../../Utils';\r\nimport Avatar from '../Avatar';\r\n\r\nconst PostWrapper = styled.div`\r\n    margin: .5em;\r\n    border-radius: 1em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n    .header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        .date {\r\n            color: var(--secondary-text-color)\r\n        }\r\n    }\r\n    .post-image {\r\n        position: relative;\r\n        display: flex;\r\n        .image-footer {\r\n            position: absolute;\r\n            bottom: .5em;\r\n            left: 1em;\r\n            display: flex;\r\n            .engagement, .media-type {\r\n                background-color: var(--secondary-bg-color);\r\n                box-shadow: 2px 5px 15px 3px rgba(0, 0, 0, 0.09);\r\n                padding: .5em 1em;\r\n                margin-right: 1em;\r\n                font-weight: 600;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Post = ({data, avatar, userName}) => {\r\n    if(data)\r\n        return (\r\n            <PostWrapper>\r\n                <div>\r\n                    <div className='header'>\r\n                        <div>\r\n                            <Avatar \r\n                                src={avatar}\r\n                                userName={userName}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                        <div className='date'>{utils.formatDate(data.timestamp)+''}</div>\r\n                    </div>\r\n                    <span className='post-image'>\r\n                        {data.media_type!=='VIDEO'?\r\n                            <img src={data.media_url} alt=''/>\r\n                        :\r\n                            <video src={data.media_url} alt='' controls=\"controls\"/>\r\n                        } \r\n                        <div className='image-footer'>\r\n                            {data.media_type!=='VIDEO'?\r\n                                <div className='media-type'>{data.media_type==='IMAGE'?'Photo':'Carousel'}</div>\r\n                                :\r\n                                <div className='media-type'>Video</div>\r\n                            }\r\n                            <div className='engagement'>{`${utils.round(data.engagement)}%`} Engagement</div>\r\n                        </div>\r\n                    </span>\r\n                    <div className='content'>\r\n                        {data.caption}\r\n                    </div>\r\n                </div>\r\n            </PostWrapper>\r\n        )\r\n    else \r\n        return (\r\n            ''\r\n        )\r\n}\r\n\r\nPost.defaultProps = {\r\n    data: null,\r\n}\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\n\r\nimport Button from '../../../Components/Button';\r\nimport Post from '../../../Components/Post';\r\n\r\nconst PostsWrapper = styled.div`\r\n    .lazy-load-post-container {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 2em;\r\n    }\r\n`;\r\n\r\nconst Npost = 15;\r\n\r\nconst Posts = ({posts}) => {\r\n\r\n    const [postCount, setPostCount] = useState(Npost);\r\n\r\n    const handlePostCount = () => {\r\n        if((postCount+Npost)<posts.length) {\r\n            setPostCount(postCount+Npost);\r\n        }\r\n        else {\r\n            setPostCount(posts.length);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PostsWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                {posts.slice(0,postCount).map((data,index)=>{\r\n                    return (\r\n                        <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 8 }} key={index}>\r\n                            <Post\r\n                                data={data}\r\n                                avatar={'https://scontent-lga3-1.xx.fbcdn.net/v/t51.2885-15/36912147_333497493855464_191442841459752960_n.jpg?_nc_cat=1&ccb=1-3&_nc_sid=86c713&_nc_ohc=2NgT-kuv8WIAX8vrWJl&_nc_ht=scontent-lga3-1.xx&oh=1244dea710bdb805fa349297b351d186&oe=609D836E'}\r\n                                userName='instaescuela'\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            {postCount!==posts.length?\r\n            <div className='lazy-load-post-container'>\r\n                <Button onClick={handlePostCount}>\r\n                    Load more posts\r\n                </Button>\r\n            </div>\r\n            :''}\r\n        </PostsWrapper>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    posts: [],\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table } from 'antd';\r\nimport Utils from '../../../Utils';\r\n\r\nconst HistoricStatsWrapper = styled.div`\r\n    padding: 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    .stats-container {\r\n        .bold {\r\n            font-weight: 600;\r\n        }\r\n        .less, .more {\r\n            padding: .25em;\r\n            border-radius: .25em;\r\n            margin-left: .25em;\r\n        }\r\n        .less {\r\n            color: var(--less-color);\r\n            background-color: var(--less-bg-color);\r\n        }\r\n        .more {\r\n            color: var(--more-color);\r\n            background-color: var(--more-bg-color);\r\n        }\r\n        .ant-table-thead > tr > th {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n  \r\nconst columns = [\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Follower Count',\r\n      dataIndex: 'followers_count',\r\n      key: 'followers_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Following Count',\r\n      dataIndex: 'following_count',\r\n      key: 'following_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Media Count',\r\n      dataIndex: 'media_count',\r\n      key: 'media_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Engagement Rate',\r\n      dataIndex: 'engagement_rate',\r\n      key: 'engagement_rate',\r\n      render: (item) => {\r\n        //console.log(item)\r\n        return (\r\n            <span className='bold'>{item}</span>\r\n        )\r\n      }\r\n    },\r\n];\r\n\r\nconst HistoricStats = ({ stats }) => {\r\n    let data = [...stats.map((item,index)=>{ \r\n        return {\r\n            key:index, \r\n            date: Utils.formatDate(item.date).split(/(\\d)*:/)[0], \r\n            followers_count:item.followers_count, \r\n            following_count: item.follows_count, \r\n            media_count:item.media_count \r\n        }\r\n    })].reverse();\r\n\r\n    return (\r\n        <HistoricStatsWrapper>\r\n            <h3>Historic stats</h3>\r\n            <div className='stats-container'>\r\n                <Table dataSource={data} columns={columns} />\r\n            </div>\r\n        </HistoricStatsWrapper>\r\n    )\r\n}\r\n\r\nHistoricStats.defaultProps = {\r\n    stats:[]\r\n}\r\n\r\nexport default HistoricStats;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DemographicsWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Demographics = () => {\r\n    return (\r\n        <DemographicsWrapper>\r\n            Demographics\r\n        </DemographicsWrapper>\r\n    )\r\n}\r\n\r\nexport default Demographics;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardWrapper = styled.div`\r\n    padding: 0em;\r\n    margin: .5em;\r\n    border-radius: .5em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .title {\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        font-weight: 600;\r\n    }\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n`;\r\n\r\nconst Card = ({ children, title }) => {\r\n    return (\r\n        <CardWrapper>\r\n            {title?\r\n                <div className='title'>{title}</div>\r\n            :''}\r\n            <div className='content'>{ children }</div>\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\nCard.defaultProps = {\r\n    title:null,\r\n}\r\n\r\nexport default Card;","import React, {useLayoutEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst PieWrapper = styled.div`\r\n    .g2-html-annotation {\r\n        overflow: auto !important;\r\n        height: 1.5em;\r\n    }\r\n`;\r\n\r\nconst colors = [\r\n    '#16BBE5',\r\n    '#1CA7C2',\r\n    '#5C90A8',\r\n    '#55BD9A',\r\n    '#FCAD73',\r\n    '#F6D48D',\r\n    '#285981',\r\n    '#CF5E91',\r\n    '#C65880',\r\n    '#A26FA4',\r\n];\r\n\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}\r\n\r\nconst PieChart = ({data}) => {\r\n    const [width, height] = useWindowSize();\r\n    const config = {\r\n        labels: [\r\n          ...data.map(item=>item.type)\r\n        ],\r\n        datasets: [{\r\n          label: 'My First Dataset',\r\n          data: [...data.map(item=>item.value)],\r\n          backgroundColor: [\r\n            ...colors\r\n          ],\r\n          hoverOffset: 4\r\n        }]\r\n    };\r\n    \r\n    const options = {\r\n        legend: {\r\n            position: (width>1140)?'right':'bottom',\r\n        },\r\n        //circumference: Math.PI,\r\n        //rotation: 1.0 * Math.PI,\r\n        cutoutPercentage: 70\r\n    }\r\n    \r\n    return (\r\n        <PieWrapper>\r\n            <Doughnut data={{...config}} options={options} width={50} height={50}/>\r\n        </PieWrapper>\r\n    )\r\n};\r\n\r\nPieChart.defaultProps = {\r\n    data: [],\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\nimport Card from '../../../Components/Card';\r\nimport Utils from '../../../Utils';\r\n\r\nimport PieChart from '../../../Components/PieChart';\r\n\r\n\r\nconst HashtagWrapper = styled.div`\r\n    .hashtag-container {\r\n        width: 100%;\r\n        display: inline-block;\r\n        .hashtag-item {\r\n            width: max-content;\r\n            display: flex;\r\n            float: left;\r\n            padding: .25em .5em;\r\n            margin: .25em;\r\n            background-color: var(--hastag-bg-color);\r\n            border-radius: .5em;\r\n            border: 1px solid var(--soft-border-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Hashtag = ({ hashtag, count}) => {\r\n    return (\r\n        <HashtagWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }} style={{display: 'flex'}}>\r\n                    <Card\r\n                        title={'Top 10 hashtags'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.slice(0,10).map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            {`# ${data.caption} ${Utils.round((data.count/count)*100)}%`} \r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Hashtags'}\r\n                    >\r\n                        <PieChart\r\n                            data={hashtag.slice(0,10).map(data=>{return {value: data.count, type: '#'+data.caption}})}\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 24}} lg={{ span: 24 }}>\r\n                    <Card\r\n                        title={'Hashtag used in the last 90 posts'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            #{ data.caption }\r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </HashtagWrapper>\r\n    )\r\n}\r\n\r\nHashtag.defaultProps = {\r\n    hashtag:[],\r\n    hashtag_count: 0,\r\n}\r\n\r\nexport default Hashtag;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\n\r\nimport Card from '../../../Components/Card';\r\n\r\nconst EngagementWrapper = styled.div`\r\n    .engagement-bar-container {\r\n        width: 100%;\r\n        padding: 1em 1em 2em 1em;\r\n        .engagement-bar {\r\n            height: 1.5em;\r\n            width: 100%;\r\n            border-radius: .25em;\r\n            background-color: var(--error-color);\r\n            position: relative;\r\n            .status-bar-container {\r\n                position: absolute;\r\n                top: -.25em;\r\n                left: 50%;\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                color: var(--error-color);\r\n                .status-bar {\r\n                    width: 1em;\r\n                    height: 2em;\r\n                    background-color: var(--secondary-bg-color);\r\n                    border: 1px solid var(--soft-border-color);\r\n                    border-radius: .25em; \r\n                    position: relative;\r\n                    &::before {\r\n                        content: \"\";\r\n                        position: absolute;\r\n                        height: 1em;\r\n                        border-left: 2px dotted var(--more-color);\r\n                        z-index: 1;\r\n                        width: 2px;\r\n                        top: -1em;\r\n                        left: calc(1em / 2 - 2px);\r\n                    }\r\n                    &::after {\r\n                        content: \"\";\r\n                        position: absolute;\r\n                        height: 1em;\r\n                        border-left: 2px dotted var(--more-color);\r\n                        z-index: 1;\r\n                        width: 2px;\r\n                        bottom: -1em;\r\n                        left: calc(1em / 2 - 2px);\r\n                    }\r\n                }\r\n                .engagement-value {\r\n                    padding: .25em .5em;\r\n                    margin-top: 1.25em;\r\n                    border-radius: .25em;\r\n                    background-color: var(--less-bg-color);\r\n                    font-weight: 600;\r\n                }\r\n            }\r\n        }\r\n        .range-values {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            width: 100%;\r\n            margin-top: .5em;\r\n            color: var(--error-color);\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Engagement = () => {\r\n    return (\r\n        <EngagementWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title='Engagement rate'\r\n                    >\r\n                        <div className='engagement-bar-container'>\r\n                            <div className='engagement-bar'>\r\n                                <div className='status-bar-container'>\r\n                                    <span className='status-bar'></span>\r\n                                    <span className='engagement-value'>3.2</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='range-values'>\r\n                                <span>0</span>\r\n                                <span>10</span>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n\r\n                </Col>\r\n            </Row>\r\n        </EngagementWrapper>\r\n    )\r\n}\r\n\r\nexport default Engagement;","import 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport AccountTabs from './Containers/AccountTabs';\nimport HorizontalMenu from './Containers/HorizontalMenu';\nimport Header from './Containers/Header';\n\nimport Posts from './Pages/Public/Posts';\nimport HistoricStats from './Pages/Public/HistoricStats';\nimport Demographics from './Pages/Public/Demographics';\nimport Hashtag from './Pages/Public/Hashtag';\nimport Engagement from './Pages/Public/Engagement';\n\nimport axios from 'axios';\n\nconst url='https://boiling-coast-31813.herokuapp.com/getProfile';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    accounts:[],\n    posts:[]\n  })\n\n  useEffect(()=>{\n\n    /*fetch('url',{body:JSON.stringify({username:\"instaescuela\"})})\n    .then(resp=>resp.json())\n    .then(data=>console.log(data.data.business_discovery))\n    .catch(error=>console.error(error));*/\n\n    axios({\n      method: \"POST\",\n      url: url,\n      data: {username:\"thesteptorial\"},\n      headers: {\n          'Content-Type': 'application/json',\n      },\n    })\n    .then(data => {\n      console.log('here',data)\n      if(data && !data.data.error){\n        console.log(data.data.business_discovery);\n        let aux = state.accounts;\n        let posts = data.data.business_discovery.media.data;\n        let hashtag = data.data.business_discovery.hashtag;\n        let hashtag_count = data.data.business_discovery.hashtag_count;\n        let stats = data.data.business_discovery.stats?data.data.business_discovery.stats.data:[];\n        aux.push(data.data.business_discovery);\n        setState({...state, accounts:aux, posts: posts, hashtag, hashtag_count, stats})\n        //.log(utils.getHashtagFromPost(data.data.profile.lastPosts))\n      }\n    })\n    .catch((error)=>{\n      console.error('error',error)\n    });\n    \n  },[]);\n\n  return (\n    <div className='App'>\n      <Header/>\n      <div style={{padding: '2em 4em'}}>\n        <Router>\n          <AccountTabs\n            accounts={state.accounts}\n          />\n          <HorizontalMenu/>\n          <Switch>\n            <Route path=\"/posts\">\n              <Posts \n                posts={state.posts}\n              />\n            </Route>\n            <Route path=\"/historic\">\n              <HistoricStats\n                stats={state.stats}\n              />\n            </Route>\n            <Route path=\"/demographics\">\n              <Demographics/>\n            </Route>\n            <Route path=\"/hashtag\">\n              <Hashtag\n                hashtag={state.hashtag}\n                count={state.hashtag_count}\n              />\n            </Route>\n            <Route path=\"/engagement\">\n              <Engagement/>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}