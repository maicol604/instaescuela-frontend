{"version":3,"sources":["Assets/Img/instagram.svg","Utils/index.js","Containers/AccountTabs/index.js","Containers/HorizontalMenu/index.js","Components/Input/index.js","Components/Avatar/index.js","Containers/Header/index.js","Components/Card/index.js","Pages/Public/Overview/index.js","Components/Button/index.js","Components/Post/index.js","Pages/Public/Posts/index.js","Pages/Public/HistoricStats/index.js","Pages/Public/Demographics/index.js","Components/PieChart/index.js","Pages/Public/Hashtag/index.js","Components/BarChart/index.js","Components/LineChart/index.js","Pages/Public/Engagement/index.js","Context/index.js","App.js","reportWebVitals.js","index.js"],"names":["utils","getNumber","number","result","round","getHashtagFromPost","posts","aux","i","length","aux2","caption","split","num","decimales","signo","Math","toString","formatDate","date","dateToReturn","newDate","Date","hour","parseInt","hours","getMonth","getDate","getFullYear","getMinutes","error","replaceAll","string","search","replace","join","TitleWrapper","styled","div","TabsWrapper","EngagementValues","min","max","percent","TabPane","Tabs","AccountTabs","accounts","onChange","activeKey","removeAccount","hideAdd","type","onEdit","data","map","pane","index","tab","className","src","profile_picture_url","alt","username","ig","name","style","whiteSpace","biography","href","website","target","followers_count","follows_count","media_count","engagement","width","status","format","flag","defaultProps","options","title","url","HorizontalMenuWrapper","HorizontalMenu","option","to","activeClassName","exact","InputWrapper","input","InputContainer","Input","placeholder","onSearch","value","e","onClick","SearchOutlined","AvatarWrapper","Avatar","userName","HeaderWrapper","UsersFinded","Header","useState","setSearch","users","setUsers","searching","setSearching","handleClick","overlay","console","log","cursor","visible","event","axios","method","then","push","business_discovery","catch","CardWrapper","Card","children","OverviewWrapper","Overview","stats","averageDailyGrowth","averageMonthlyGrowth","last30daysFollowerGrowth","last7daysFollowerGrowth","state","setState","useEffect","diference","prev_count","count","gutter","xs","span","md","lg","display","ArrowUpOutlined","ArrowDownOutlined","ButtonWrapper","Button","PostWrapper","Post","avatar","timestamp","media_type","media_url","controls","PostsWrapper","Posts","postCount","setPostCount","slice","HistoricStatsWrapper","columns","dataIndex","key","render","item","Utils","HistoricStats","following_count","engagement_rate","reverse","dataSource","DemographicsWrapper","Demographics","PieWrapper","colors","PieChart","id","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","config","labels","datasets","label","backgroundColor","hoverOffset","legend","position","cutoutPercentage","height","HashtagWrapper","Hashtag","hashtag","hashtag_count","ChartWrapper","BarChart","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartConf","setChartConf","tooltips","callbacks","tooltipItem","yLabel","LineChart","EngagementWrapper","EngagementBar","props","barPercent","maxValuePosition","Engagement","averageLikes","averageComment","averageEngagement","postingHabits","followers","engagementRange","filter","isPositive","percentage","placement","InfoCircleOutlined","usersContext","createContext","App","userActive","indexActive","headers","Provider","padding","splice","path","Fragment","average_likes","average_comments","posting_habit_count","media","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83f42936.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.c1cb19ae.svg\";","const utils = {\r\n    getNumber: (number) => {\r\n        let result=0;\r\n        if(number>=1000 && number<1000000) {\r\n            result = number/1000;\r\n            result = utils.round(result, 1);\r\n            return `${result} K`;\r\n        }\r\n        if(number>=1000000){\r\n            result = number/1000000;\r\n            result = utils.round(result, 1);\r\n            return `${result} M`;\r\n        }\r\n        return number;\r\n    },\r\n    getHashtagFromPost: (posts) => {\r\n        let aux = [];\r\n        for(let i=0;i<posts.length;i++){\r\n            let aux2 = posts[i].caption.split('#');\r\n            aux = [...aux, aux2];\r\n        }\r\n        return aux;\r\n    },\r\n    round: (num, decimales = 2) => {\r\n        var signo = (num >= 0 ? 1 : -1);\r\n        num = num * signo;\r\n        if (decimales === 0) //con 0 decimales\r\n            return signo * Math.round(num);\r\n        // round(x * 10 ^ decimales)\r\n        num = num.toString().split('e');\r\n        num = Math.round(+(num[0] + 'e' + (num[1] ? (+num[1] + decimales) : decimales)));\r\n        // x * 10 ^ (-decimales)\r\n        num = num.toString().split('e');\r\n        return signo * (num[0] + 'e' + (num[1] ? (+num[1] - decimales) : -decimales));\r\n    },\r\n    formatDate: (date) => {\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ];\r\n        let dateToReturn;\r\n        try {\r\n            let newDate = new Date(date.split(/.[0-9]*Z/)[0]);\r\n            let hour = parseInt(date.split('T')[1].split(':')[0])\r\n            let hours = (hour>12)?(hour-12):hour;\r\n            dateToReturn = `${months[newDate.getMonth()]} ${newDate.getDate()}, ${newDate.getFullYear()} ${hours}:${newDate.getMinutes()} ${(hour>12)?'PM':'AM'}`;\r\n        } catch (error) {\r\n            dateToReturn = '';\r\n        }\r\n        return dateToReturn;\r\n    },\r\n    replaceAll: (string, search, replace) => {\r\n        if (string === null) return \"\";\r\n        return string.split(search).join(replace);\r\n    }\r\n}\r\n\r\nexport default utils;","import React from 'react';\r\nimport { Tabs, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport ig from '../../Assets/Img/instagram.svg';\r\nimport utils from '../../Utils';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;  \r\n    align-items: center;\r\n    .avatar-container {\r\n        width: 2em;\r\n        display: flex;\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n    }\r\n    .title {\r\n        font-weight: 600;\r\n        margin-left: .5em;\r\n    }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n    padding: 1em 0;\r\n    h3 {\r\n        font-size: 2.25em;\r\n        font-weight: 600;\r\n        margin: 0;\r\n    }\r\n    .tab-content {\r\n        background-color: #fff;\r\n        border-radius: 0 .75em .75em .75em;\r\n        padding: 3em;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .avatar-container {\r\n            position: relative;\r\n            width: min-content;\r\n            height: min-content;\r\n            >span {\r\n                border-radius: 50%;\r\n                overflow: hidden;\r\n                width: 12em;\r\n                display: flex;\r\n            }\r\n            .ig-logo {\r\n                width: 3em;\r\n                border-radius: 50%;\r\n                position: absolute;\r\n                bottom: 0;\r\n                right: 0;\r\n                border: 2px solid #fff;\r\n            }\r\n        }\r\n        .description {\r\n            padding: 0 2em 0 2em;\r\n            display: flex;\r\n            flex-direction: column;\r\n            color: var(--secondary-text-color);\r\n            font-size: 1.25em;\r\n            width: 60%;\r\n            .name {\r\n                color: var(--main-text-color)\r\n            }\r\n            .account {\r\n                display: flex;\r\n                align-items: center;\r\n                .type {\r\n                    padding: .25em 1em;\r\n                    background-color: var(--hastag-bg-color);\r\n                    color: var(--secondary-text-color);\r\n                    border-radius: .5em;\r\n                    height: max-content;\r\n                    margin-left: .5em;\r\n                }\r\n            }\r\n        }\r\n        .numbers-info {\r\n            .numbers {\r\n                display: flex;\r\n                h3 {\r\n                    display: block ruby; \r\n                }\r\n                >div {\r\n                    padding: 1em;\r\n                    span {\r\n                        color: var(--secondary-text-color);\r\n                    }\r\n                }\r\n            }\r\n            .engagement-data {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                >div {\r\n                    text-align: center;\r\n                    width: max-content;\r\n                }\r\n                .engagement-values {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    margin-top: 1em;\r\n                    font-weight: 600;\r\n                    width: max-content;\r\n                    .range-active {\r\n                        border: 1px solid var(--soft-border-color);\r\n                        border-radius: .25em;\r\n                        background-color: var(--hastag-bg-color);\r\n                        padding: .25em 1em;\r\n                        &.successfully{\r\n                            //border-color: var(--successfully-color);\r\n                        }\r\n                        &.error{\r\n                            //border-color: var(--error-color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .ant-tabs-top > .ant-tabs-nav, .ant-tabs-bottom > .ant-tabs-nav, .ant-tabs-top > div > .ant-tabs-nav, .ant-tabs-bottom > div > .ant-tabs-nav {\r\n        margin: 0;\r\n    }\r\n    .ant-tabs-card.ant-tabs-top > .ant-tabs-nav .ant-tabs-tab, .ant-tabs-card.ant-tabs-top > div > .ant-tabs-nav .ant-tabs-tab {\r\n        border-radius: .75em .75em 0 0 ;\r\n        padding: 1em;\r\n    }\r\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\r\n        color: var(--main-text-color);\r\n    }\r\n    .progress-children {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        .title {\r\n            font-size: .5em;\r\n        }\r\n        .value {\r\n            margin-bottom: .25em;\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst engagementValue = 2.4;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst AccountTabs = ({accounts, onChange, activeKey, removeAccount}) => {\r\n\r\n    const handleChange = (activeKey) => {\r\n        onChange(parseInt(activeKey))\r\n    }\r\n\r\n    const userTabTitle = (data) => {\r\n        return (\r\n            <TitleWrapper>\r\n                <span className='avatar-container'>\r\n                    <img src={data.profile_picture_url} alt=''/>\r\n                </span>\r\n                <span className='title'>{data.username}</span>\r\n            </TitleWrapper>\r\n        )\r\n    }\r\n\r\n    const handleEdit = (data) => {\r\n        removeAccount(parseInt(data));\r\n    }\r\n\r\n    return (\r\n        <TabsWrapper>\r\n            <Tabs\r\n                hideAdd\r\n                onChange={handleChange}\r\n                activeKey={`${activeKey}`}\r\n                type=\"editable-card\"\r\n                onEdit={handleEdit}\r\n            >\r\n                {accounts.map((pane, index) => (\r\n                    <TabPane tab={userTabTitle(pane)} key={`${index}`}>\r\n                        <div className='tab-content'>\r\n                            <div className='avatar-container'>\r\n                                <span><img src={pane.profile_picture_url} alt=''/></span>\r\n                                <span className='ig-logo'><img src={ig} alt=''/></span>\r\n                            </div>\r\n                            <div className='description'>\r\n                                <span className='account'><h3>{pane.username}</h3><span className='type'>{pane.type}</span></span>\r\n                                <span className='name'>{pane.name}</span>\r\n                                <span  style={{whiteSpace:'pre-line'}}>{pane.biography}</span>\r\n                                <span><a href={pane.website} target='_blank'>{pane.website}</a></span>\r\n                            </div>\r\n                            <div className='numbers-info'>\r\n                                <div className='numbers'>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.followers_count)}</h3>\r\n                                        <span>Followers</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.follows_count)}</h3>\r\n                                        <span>Followings</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.media_count)}</h3>\r\n                                        <span>Posts</span> \r\n                                    </div>\r\n                                </div>\r\n                                <div className='engagement-data'>\r\n                                    <div>\r\n                                        <Progress type=\"circle\" percent={(utils.round(pane.engagement)/3.8)*100}  width={100} status={(((utils.round(pane.engagement)/3.8)*100)<100)?\"exception\":\"\"} format={()=><div className='progress-children'><span className='value'>{utils.round(pane.engagement)}</span><span className='title'>Engagement</span><span className='title'>rate</span></div>}/>\r\n                                        {/*<Progress type=\"circle\" percent={70} status=\"exception\" />*/}\r\n                                    </div>\r\n                                    <div className='engagement-values'>\r\n                                        {\r\n                                            EngagementValues.map((data, index)=>{\r\n                                                let flag = pane.followers_count>data.min && pane.followers_count<data.max;\r\n                                                return (\r\n                                                    <div key={index} className={flag?('range-active '+'error'):''}>\r\n                                                        {data.max>5000000000?`More than ${utils.getNumber(data.min)} followers: ${data.percent}`:`From ${utils.getNumber(data.min)} to ${utils.getNumber(data.max)} followers: ${data.percent}`}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                ))}\r\n            </Tabs>\r\n        </TabsWrapper>\r\n    )\r\n}\r\n\r\nAccountTabs.defaultProps = {\r\n    accounts:[],\r\n}\r\n\r\nexport default AccountTabs;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst options = [\r\n    {\r\n        title:'Overview',\r\n        url:'/'\r\n    },\r\n    /*{\r\n        title:'Demographics',\r\n        url:'/demographics'\r\n    },*/\r\n    {\r\n        title:'Engagement',\r\n        url:'/engagement'\r\n    },\r\n    /*{\r\n        title:'Mentions',\r\n        url:'/mentions'\r\n    },*/\r\n    {\r\n        title:'Hashtag',\r\n        url:'/hashtag'\r\n    },\r\n    {\r\n        title:'Historic Stats',\r\n        url:'/historic'\r\n    },\r\n    {\r\n        title:'Posts',\r\n        url:'/posts'\r\n    },\r\n]\r\n\r\nconst HorizontalMenuWrapper = styled.div`\r\n    padding: 0 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    margin-bottom: 1em;\r\n    display: flex;\r\n    .menu-item {\r\n        font-weight: 600;\r\n        width: max-content;\r\n        padding: 1em 1em;\r\n        margin: 0 .5em;\r\n        display: block ruby;\r\n        color: var(--main-text-color);\r\n    }\r\n    .menu-item-active {\r\n        border-bottom: 2px solid var(--main-color);\r\n    }\r\n\r\n`;\r\n\r\nconst HorizontalMenu = () => {\r\n    return (\r\n        <HorizontalMenuWrapper>\r\n            {options.map((option,index)=>\r\n                <NavLink key={index} to={option.url} activeClassName='menu-item-active' exact>\r\n                    <div className={'pointer menu-item'}>\r\n                        {option.title}\r\n                    </div>\r\n                </NavLink>\r\n            )}\r\n        </HorizontalMenuWrapper>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenu;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: .5em 2.5em .5em 1.5em;\r\n    background-color: var(--hastag-bg-color);\r\n    border: 1px solid var(--soft-border-color);\r\n    border-radius: .5em;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    position: relative;\r\n    .icon-container {\r\n        position: absolute;\r\n        right: 1em;\r\n        top: .5em;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Input = ({placeholder, onChange, onSearch, value}) => {\r\n\r\n    const hanldeChange = (e) => {\r\n        let value = e.target.value;\r\n        onChange({ value });\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <InputWrapper placeholder={placeholder} onChange={hanldeChange} value={value}/>\r\n            <span className='icon-container' onClick={onSearch}><SearchOutlined /></span>\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nInput.defaultProps = {\r\n    placeholder: '',\r\n    value:''\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ig from '../../Assets/Img/instagram.svg';\r\n\r\nconst AvatarWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    .avatar-image {\r\n        width: 3em;\r\n        height: 3em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    .ig-logo {\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        position: absolute;\r\n        left: 2.5em;\r\n        bottom: 0;\r\n    }\r\n    .user-name {\r\n        font-weight: 600;\r\n        margin-left: 1em;\r\n        font-size: 1em;\r\n    }\r\n`;\r\n\r\nconst Avatar = ({src, userName}) => {\r\n    return (\r\n        <AvatarWrapper>\r\n            <div className='avatar-image'>\r\n                <img src={src} alt='' />\r\n            </div>\r\n            <div className='ig-logo'>\r\n                <img src={ig} alt='' />\r\n            </div>\r\n            <div className='user-name'>{userName}</div>\r\n        </AvatarWrapper>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Input from '../../Components/Input';\r\nimport axios from 'axios';\r\nimport { Dropdown, Spin } from 'antd';\r\nimport Avatar from '../../Components/Avatar';\r\n\r\nconst HeaderWrapper = styled.div`\r\n\r\n    padding: 2em 4em;\r\n    background: var(--secondary-bg-color);\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .left-box {\r\n        display: flex;\r\n        .search-box {\r\n            margin-left: 1em;\r\n        }\r\n    }\r\n    .right-box {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst UsersFinded = styled.div`\r\n    background-color: var(--secondary-bg-color);\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1em;\r\n    border-radius: .5em;\r\n    border: 1px solid var(--soft-border-color);\r\n`;\r\n\r\nconst Header = ({ onSearch }) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [searching, setSearching] = useState(false);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        let { value } = event;\r\n        setSearch(value)\r\n        setSearching(true);\r\n        const url='https://boiling-coast-31813.herokuapp.com/getProfile';\r\n        axios({\r\n            method: \"POST\",\r\n            url: url,\r\n            data: { username: value },\r\n        })\r\n        .then(data => {\r\n            console.log(data)\r\n            setSearching(false);\r\n            if(data && !data.data.error){\r\n                let aux = [];\r\n                aux.push(data.data.business_discovery);\r\n                console.log(aux)\r\n                setUsers(aux);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearching(true);\r\n        const url='https://boiling-coast-31813.herokuapp.com/getProfile';\r\n        axios({\r\n            method: \"POST\",\r\n            url: url,\r\n            data: { username: search },\r\n        })\r\n        .then(data => {\r\n            setSearching(false);\r\n            if(data && !data.data.error){\r\n                let aux = [];\r\n                aux.push(data.data.business_discovery);\r\n                console.log(aux)\r\n                setUsers(aux);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.error(error);\r\n        });\r\n    }   \r\n\r\n    const handleClick = () => {\r\n        onSearch(users[0]);\r\n        setUsers([]);\r\n        setSearch('');\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <div className='left-box'>\r\n                <div>\r\n                    Logo\r\n                </div>\r\n                <div className='search-box'>\r\n                    <Dropdown\r\n                        overlay={\r\n                            <UsersFinded>\r\n                                {   !searching?\r\n                                    users.map((data, index)=>{\r\n                                        console.log(data)\r\n                                        return (\r\n                                            <span style={{cursor:'pointer'}} onClick={handleClick}>\r\n                                                <Avatar\r\n                                                    src={data.profile_picture_url}\r\n                                                    userName={data.username}\r\n                                                    key={index}\r\n                                                />\r\n                                            </span>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <Spin />\r\n                                }\r\n                            </UsersFinded>\r\n                        }\r\n                        visible={users.length>0 || searching}\r\n                    >\r\n                        <Input\r\n                            placeholder='Search accounts'\r\n                            onChange={handleChange}\r\n                            onSearch = { handleSearch }\r\n                            value={search}\r\n                        />\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n            <div className='right-box'>\r\n                menu\r\n                <div>\r\n                        \r\n                </div>\r\n            </div>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardWrapper = styled.div`\r\n    padding: 0em;\r\n    margin: .5em;\r\n    border-radius: .5em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    width: 100%;\r\n    .title {\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        font-weight: 600;\r\n    }\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n`;\r\n\r\nconst Card = ({ children, title }) => {\r\n    return (\r\n        <CardWrapper>\r\n            {title?\r\n                <div className='title'>{title}</div>\r\n            :''}\r\n            <div className='content'>{ children }</div>\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\nCard.defaultProps = {\r\n    title:null,\r\n}\r\n\r\nexport default Card;","import React,{ useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col } from 'antd';\r\nimport Card from '../../../Components/Card';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst OverviewWrapper = styled.div`\r\n    .average-card {\r\n        padding: 0 1em 1em 1em;\r\n        h2 {\r\n            font-size: 3em;\r\n            font-weight: 600;\r\n            margin: .5em 0em .25em 0;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n        }\r\n        .title-container {\r\n            font-weight: 600;\r\n            display:  flex;\r\n            align-items: center;\r\n            font-size: 1.25em;\r\n            .icon-container {\r\n                color: var(--secondary-text-color);\r\n                margin-left: .5em;\r\n            }\r\n        }\r\n        .arrow-up, .arrow-down {\r\n            width: 1.25em;\r\n            height: 1.25em;\r\n            font-size: .5em;\r\n            padding: 1em;\r\n            border-radius: 50%;\r\n            box-sizing: border-box;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        .arrow-down {\r\n            color: var(--less-color);\r\n            background-color: var(--less-bg-color);\r\n        }\r\n        .arrow-up {\r\n            color: var(--more-color);\r\n            background-color: var(--more-bg-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Overview = ({stats}) => {\r\n\r\n    const [state, setState] = useState({\r\n        averageDailyGrowth: 0,\r\n        averageMonthlyGrowth: 0,\r\n        last30daysFollowerGrowth: 0,\r\n        last7daysFollowerGrowth: 0,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        let averageDailyGrowth= 0;\r\n        let averageMonthlyGrowth= 0;\r\n        let last30daysFollowerGrowth= 0;\r\n        let last7daysFollowerGrowth= 0;\r\n        for(let i=0;i<stats.length;i++){\r\n            //console.log(stats[i])\r\n            let diference = 0;\r\n            if(stats.length>=30 && i<30){\r\n                if(stats[i].followers_count.prev_count && stats[i].followers_count.prev_count!==0)\r\n                    diference = stats[i].followers_count.count-stats[i].followers_count.prev_count;\r\n                last30daysFollowerGrowth = last30daysFollowerGrowth + diference;\r\n            }\r\n            diference = 0;\r\n            if(stats.length>=7 && i<30){\r\n                if(stats[i].followers_count.prev_count && stats[i].followers_count.prev_count!==0)\r\n                    diference = stats[i].followers_count.count-stats[i].followers_count.prev_count;\r\n                last7daysFollowerGrowth = last7daysFollowerGrowth + diference;\r\n            }\r\n            diference = 0;\r\n            if(stats[i].followers_count.prev_count && stats[i].followers_count.prev_count!==0)\r\n                diference = stats[i].followers_count.count-stats[i].followers_count.prev_count;\r\n            averageDailyGrowth = averageDailyGrowth + diference;\r\n        }\r\n        if(averageDailyGrowth!==0)\r\n            averageDailyGrowth = averageDailyGrowth / stats.length;\r\n        if(last7daysFollowerGrowth!==0)\r\n            last7daysFollowerGrowth = last7daysFollowerGrowth / 7;\r\n        if(last30daysFollowerGrowth!==0)\r\n            last30daysFollowerGrowth = last30daysFollowerGrowth / 30;\r\n        setState({\r\n            ...state, \r\n            averageDailyGrowth,\r\n            last30daysFollowerGrowth,\r\n            last7daysFollowerGrowth,\r\n            averageMonthlyGrowth,\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <OverviewWrapper>\r\n        <Row\r\n            gutter={[10, 10]}\r\n        >\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                    <div className='average-card'>\r\n                        <h2>{state.last7daysFollowerGrowth!==0?state.last7daysFollowerGrowth:'-'}</h2>\r\n                        <div className='title-container'>\r\n                            Last 7 days follower growth  \r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                    <div className='average-card'>\r\n                        <h2>{state.last30daysFollowerGrowth!==0?state.last30daysFollowerGrowth:'-'}</h2>\r\n                        <div className='title-container'>\r\n                            Last 30 days Follower Growth \r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                    <div className='average-card'>\r\n                        <h2>\r\n                            {state.averageDailyGrowth!==0?state.averageDailyGrowth:'-'}\r\n                            {state.averageDailyGrowth>0?<span className={'arrow-up'}><ArrowUpOutlined /></span>:''}\r\n                            {state.averageDailyGrowth<0?<span className={'arrow-down'}><ArrowDownOutlined /></span>:''}\r\n                        </h2>\r\n                        <div className='title-container'>\r\n                            Average daily growth \r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                    <div className='average-card'>\r\n                        <h2>{state.averageMonthlyGrowth!==0?state.averageMonthlyGrowth:'-'}</h2>\r\n                        <div className='title-container'>\r\n                            Average monthly growth \r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12}} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            {/*<Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12}} style={{display: 'flex'}}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>*/}\r\n        </Row>\r\n        </OverviewWrapper>\r\n    )\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button as ButtonAntd} from 'antd';\r\n\r\nconst ButtonWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    return (\r\n        <ButtonWrapper onClick={handleClick}>\r\n            <ButtonAntd>\r\n                { children }\r\n            </ButtonAntd>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport utils from '../../Utils';\r\nimport Avatar from '../Avatar';\r\n\r\nconst PostWrapper = styled.div`\r\n    margin: .5em;\r\n    border-radius: 1em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n    .header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        .date {\r\n            color: var(--secondary-text-color)\r\n        }\r\n    }\r\n    .post-image {\r\n        position: relative;\r\n        display: flex;\r\n        .image-footer {\r\n            position: absolute;\r\n            bottom: .5em;\r\n            left: 1em;\r\n            display: flex;\r\n            .engagement, .media-type {\r\n                background-color: var(--secondary-bg-color);\r\n                box-shadow: 2px 5px 15px 3px rgba(0, 0, 0, 0.09);\r\n                padding: .5em 1em;\r\n                margin-right: 1em;\r\n                font-weight: 600;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Post = ({data, avatar, userName}) => {\r\n    if(data)\r\n        return (\r\n            <PostWrapper>\r\n                <div>\r\n                    <div className='header'>\r\n                        <div>\r\n                            <Avatar \r\n                                src={avatar}\r\n                                userName={userName}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                        <div className='date'>{utils.formatDate(data.timestamp)+''}</div>\r\n                    </div>\r\n                    <span className='post-image'>\r\n                        {data.media_type!=='VIDEO'?\r\n                            <img src={data.media_url} alt=''/>\r\n                        :\r\n                            <video src={data.media_url} alt='' controls=\"controls\"/>\r\n                        } \r\n                        <div className='image-footer'>\r\n                            {data.media_type!=='VIDEO'?\r\n                                <div className='media-type'>{data.media_type==='IMAGE'?'Photo':'Carousel'}</div>\r\n                                :\r\n                                <div className='media-type'>Video</div>\r\n                            }\r\n                            <div className='engagement'>{`${utils.round(data.engagement)}%`} Engagement</div>\r\n                        </div>\r\n                    </span>\r\n                    <div className='content'>\r\n                        {data.caption}\r\n                    </div>\r\n                </div>\r\n            </PostWrapper>\r\n        )\r\n    else \r\n        return (\r\n            ''\r\n        )\r\n}\r\n\r\nPost.defaultProps = {\r\n    data: null,\r\n}\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\n\r\nimport Button from '../../../Components/Button';\r\nimport Post from '../../../Components/Post';\r\n\r\nconst PostsWrapper = styled.div`\r\n    .lazy-load-post-container {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 2em;\r\n    }\r\n`;\r\n\r\nconst Npost = 15;\r\n\r\nconst Posts = ({posts, avatar}) => {\r\n\r\n    const [postCount, setPostCount] = useState(Npost);\r\n\r\n    const handlePostCount = () => {\r\n        if((postCount+Npost)<posts.length) {\r\n            setPostCount(postCount+Npost);\r\n        }\r\n        else {\r\n            setPostCount(posts.length);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PostsWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                {posts.slice(0,postCount).map((data,index)=>{\r\n                    return (\r\n                        <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 8 }} key={index} style={{display: 'flex'}}>\r\n                            <Post\r\n                                data={data}\r\n                                avatar={avatar}\r\n                                userName='instaescuela'\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            {postCount!==posts.length?\r\n            <div className='lazy-load-post-container'>\r\n                <Button onClick={handlePostCount}>\r\n                    Load more posts\r\n                </Button>\r\n            </div>\r\n            :''}\r\n        </PostsWrapper>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    posts: [],\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table } from 'antd';\r\nimport Utils from '../../../Utils';\r\n\r\nconst HistoricStatsWrapper = styled.div`\r\n    padding: 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    .stats-container {\r\n        .bold {\r\n            font-weight: 600;\r\n        }\r\n        .less, .more {\r\n            padding: .25em;\r\n            border-radius: .25em;\r\n            margin-left: .25em;\r\n        }\r\n        .less {\r\n            color: var(--less-color);\r\n            background-color: var(--less-bg-color);\r\n        }\r\n        .more {\r\n            color: var(--more-color);\r\n            background-color: var(--more-bg-color);\r\n        }\r\n        .ant-table-thead > tr > th {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n  \r\nconst columns = [\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Follower Count',\r\n      dataIndex: 'followers_count',\r\n      key: 'followers_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'more':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Following Count',\r\n      dataIndex: 'following_count',\r\n      key: 'following_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'more':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Media Count',\r\n      dataIndex: 'media_count',\r\n      key: 'media_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'more':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n        title: 'Engagement Rate',\r\n        dataIndex: 'engagement_rate',\r\n        key: 'engagement_rate',\r\n        render: (item) => {\r\n            let diference = 0;\r\n            if(item.prev_count && Utils.round(item.count)!==Utils.round(item.prev_count) && item.prev_count!==0)\r\n                diference = Utils.round(item.count)-Utils.round(item.prev_count);\r\n            return (\r\n                <span className='bold'>\r\n                    {`${Utils.round(item.count)}%`}\r\n                    {diference!==0?\r\n                        <span className={diference>0?'more':'less'}>{`${diference>0?'+':''}${Utils.round(diference)}`}</span>\r\n                    :''}\r\n                </span>\r\n            )\r\n        }\r\n    },\r\n];\r\n\r\nconst HistoricStats = ({ stats }) => {\r\n    let data = [...stats.map((item,index)=>{ \r\n        return {\r\n            key:index, \r\n            date: Utils.formatDate(item.date).split(/(\\d)*:/)[0], \r\n            followers_count:item.followers_count, \r\n            following_count: item.follows_count, \r\n            media_count:item.media_count,\r\n            engagement_rate: item.engagement_rate\r\n        }\r\n    })].reverse();\r\n\r\n    return (\r\n        <HistoricStatsWrapper>\r\n            <h3>Historic stats</h3>\r\n            <div className='stats-container'>\r\n                <Table dataSource={data} columns={columns} />\r\n            </div>\r\n        </HistoricStatsWrapper>\r\n    )\r\n}\r\n\r\nHistoricStats.defaultProps = {\r\n    stats:[]\r\n}\r\n\r\nexport default HistoricStats;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DemographicsWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Demographics = () => {\r\n    return (\r\n        <DemographicsWrapper>\r\n            Demographics\r\n        </DemographicsWrapper>\r\n    )\r\n}\r\n\r\nexport default Demographics;","import React, {useLayoutEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst PieWrapper = styled.div`\r\n    .g2-html-annotation {\r\n        overflow: auto !important;\r\n        height: 1.5em;\r\n    }\r\n`;\r\n\r\nconst colors = [\r\n    '#16BBE5',\r\n    '#1CA7C2',\r\n    '#5C90A8',\r\n    '#55BD9A',\r\n    '#FCAD73',\r\n    '#F6D48D',\r\n    '#285981',\r\n    '#CF5E91',\r\n    '#C65880',\r\n    '#A26FA4',\r\n];\r\n\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}\r\n\r\nconst PieChart = ({data, id}) => {\r\n    const [width, height] = useWindowSize();\r\n    const config = {\r\n        labels: [\r\n          ...data.map(item=>item.type)\r\n        ],\r\n        datasets: [{\r\n          label: 'My First Dataset',\r\n          data: [...data.map(item=>item.value)],\r\n          backgroundColor: [\r\n            ...colors\r\n          ],\r\n          hoverOffset: 4\r\n        }]\r\n    };\r\n    \r\n    const options = {\r\n        legend: {\r\n            position: (width>1140)?'right':'bottom',\r\n        },\r\n        //circumference: Math.PI,\r\n        //rotation: 1.0 * Math.PI,\r\n        cutoutPercentage: 70\r\n    }\r\n    \r\n    return (\r\n        <PieWrapper key={id}>\r\n            <Doughnut data={{...config}} options={options} width={50} height={50}/>\r\n        </PieWrapper>\r\n    )\r\n};\r\n\r\nPieChart.defaultProps = {\r\n    data: [],\r\n    id:0,\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\nimport Card from '../../../Components/Card';\r\nimport Utils from '../../../Utils';\r\n\r\nimport PieChart from '../../../Components/PieChart';\r\n\r\n\r\nconst HashtagWrapper = styled.div`\r\n    .hashtag-container {\r\n        width: 100%;\r\n        display: inline-block;\r\n        .hashtag-item {\r\n            width: max-content;\r\n            display: flex;\r\n            float: left;\r\n            padding: .25em .5em;\r\n            margin: .25em;\r\n            background-color: var(--hastag-bg-color);\r\n            border-radius: .5em;\r\n            border: 1px solid var(--soft-border-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Hashtag = ({ hashtag, count, key}) => {\r\n    return (\r\n        <HashtagWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }} style={{display: 'flex'}}>\r\n                    <Card\r\n                        title={'Top 10 hashtags'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.slice(0,10).map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            {`#${data.caption} ${Utils.round((data.count/count)*100)}%`} \r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Hashtags'}\r\n                    >\r\n                        <PieChart\r\n                            data={hashtag.slice(0,10).map(data=>{return {value: data.count, type: '#'+data.caption}})}\r\n                            id={ key }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 24}} lg={{ span: 24 }}>\r\n                    <Card\r\n                        title={'Hashtag used in the last 90 posts'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            #{ data.caption }\r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </HashtagWrapper>\r\n    )\r\n}\r\n\r\nHashtag.defaultProps = {\r\n    hashtag:[],\r\n    hashtag_count: 0,\r\n    key:0\r\n}\r\n\r\nexport default Hashtag;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst ChartWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst BarChart = ({ title, data, id }) => {\r\n\r\n  const [chartConf, setChartConf] = useState({\r\n        labels: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\r\n        datasets: [\r\n          {\r\n            label: title,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#ff4d4f',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: data,\r\n          }\r\n        ]\r\n    }\r\n  ) \r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return tooltipItem.yLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setChartConf({...chartConf, datasets: [{...chartConf.datasets[0], data: data}]});\r\n  },[ data ])\r\n\r\n  return (\r\n    <ChartWrapper key={id}>\r\n      <Bar\r\n        data={{...chartConf}} \r\n        options={{...options}}\r\n      />\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nBarChart.defaultProps = {\r\n    title: '',\r\n    id: 0,\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst ChartWrapper = styled.div`\r\n\r\n`;\r\n\r\n\r\nconst LineChart = ({ title, data }) => {\r\n  console.log(data)\r\n  const config = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: '#ff4d4f',\r\n        borderColor: '#ff4d4f',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#ff4d4f',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#ff4d4f',\r\n        pointHoverBorderColor: '#ff4d4f',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: data\r\n      }\r\n    ]\r\n  };\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return tooltipItem.yLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <ChartWrapper>\r\n      <Line\r\n        options={{...options}}\r\n        data={{...config}} \r\n      />\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nLineChart.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Tooltip } from 'antd';\r\nimport Utils from '../../../Utils';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../../../Components/Card';\r\nimport BarChart from '../../../Components/BarChart';\r\nimport LineChart from '../../../Components/LineChart';\r\n\r\nconst EngagementWrapper = styled.div`\r\n    \r\n    .average-card {\r\n        padding: 0 1em 1em 1em;\r\n        h2 {\r\n            font-size: 3em;\r\n            font-weight: 600;\r\n            margin: .5em .5em .25em 0;\r\n        }\r\n        .title-container {\r\n            font-weight: 600;\r\n            display:  flex;\r\n            align-items: center;\r\n            font-size: 1.25em;\r\n            .icon-container {\r\n                color: var(--secondary-text-color);\r\n                margin-left: .5em;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst EngagementBar = styled.div`\r\n    width: 100%;\r\n    padding: 1em 1em 2em 1em;\r\n    .engagement-bar {\r\n        height: 1.5em;\r\n        width: 100%;\r\n        border-radius: .25em;\r\n        background-color: var(--error-color);\r\n        position: relative;\r\n        .status-bar-container {\r\n            position: absolute;\r\n            top: -.25em;\r\n            left: 0;\r\n            left: ${props => props.barPercent ? props.barPercent : 'auto'};\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            color: var(--error-color);\r\n            .status-bar {\r\n                width: 1em;\r\n                height: 2em;\r\n                background-color: var(--secondary-bg-color);\r\n                border: 1px solid var(--soft-border-color);\r\n                border-radius: .25em; \r\n                position: relative;\r\n                &::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    height: 1em;\r\n                    border-left: 2px dotted var(--less-color);\r\n                    z-index: 1;\r\n                    width: 2px;\r\n                    top: -1em;\r\n                    left: calc(1em / 2 - 2px);\r\n                }\r\n                &::after {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    height: 1em;\r\n                    border-left: 2px dotted var(--less-color);\r\n                    z-index: 1;\r\n                    width: 2px;\r\n                    bottom: -1em;\r\n                    left: calc(1em / 2 - 2px);\r\n                }\r\n            }\r\n            .engagement-value {\r\n                padding: .25em .5em;\r\n                margin-top: 1.25em;\r\n                border-radius: .25em;\r\n                background-color: var(--less-bg-color);\r\n                font-weight: 600;\r\n                position: absolute;\r\n                bottom: -3.5em;\r\n            }\r\n        }\r\n    }\r\n    .range-values {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        margin-top: .5em;\r\n        color: var(--error-color);\r\n        font-weight: 600;\r\n    }\r\n    &.positive {\r\n        .engagement-bar {\r\n            background-color: var(--successfully-color);\r\n            .status-bar-container {\r\n                .status-bar {\r\n                    &::before {\r\n                        border-left: 2px dotted var(--more-color);\r\n                    }\r\n                    &::after {\r\n                        border-left: 2px dotted var(--more-color);\r\n                    }\r\n                }\r\n                .engagement-value {\r\n                    color: var(--successfully-color);\r\n                    background-color: var(--more-bg-color);\r\n                }\r\n            }\r\n        }\r\n        .range-values {\r\n            color: var(--successfully-color);\r\n            .min {\r\n\r\n            }\r\n            .max {\r\n                position: absolute;\r\n                left: ${props=>props.maxValuePosition?props.maxValuePosition:'0'};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Engagement = ({ averageLikes, averageComment, averageEngagement, postingHabits, engagement, followers, key}) => {\r\n    const engagementRange = EngagementValues.filter(data=>data.max>followers && followers>data.min)[0];\r\n    const isPositive = engagement>engagementRange.percent;\r\n    const percentage = Utils.round(engagement/engagementRange.percent*100,0);\r\n    return (\r\n        <EngagementWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 24}} lg={{ span: 24 }}>\r\n                    <Card\r\n                        title='Engagement rate'\r\n                    >\r\n                        <EngagementBar\r\n                            barPercent={`calc(${percentage>100?100:percentage}% - .5em)`}\r\n                            maxValuePosition={`${percentage>100?(100/percentage*100):100}%`}\r\n                            className={isPositive?'positive':''}\r\n                        >\r\n                            <div className='engagement-bar '>\r\n                                <div className='status-bar-container'>\r\n                                    <span className='status-bar'></span>\r\n                                    <span className='engagement-value'>{Utils.round(engagement)}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='range-values'>\r\n                                <span className='min'>0</span>\r\n                                <span className='max'>{engagementRange.percent}</span>\r\n                            </div>\r\n                        </EngagementBar>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card>\r\n                        <div className='average-card'>\r\n                            <h2>{Utils.round(averageLikes)}</h2>\r\n                            <div className='title-container'>\r\n                                Average likes \r\n                                <Tooltip placement=\"top\" title={'The average number of likes received on all types of 90 last posts'}>\r\n                                    <span className='icon-container'><InfoCircleOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card>\r\n                        <div className='average-card'>\r\n                            <h2>{Utils.round(averageComment)}</h2>\r\n                            <div className='title-container'>\r\n                                Average comments \r\n                                <Tooltip placement=\"top\" title={'The average number of comments received on all types of 90 last posts'}>\r\n                                    <span className='icon-container'><InfoCircleOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Average engagement'}\r\n                    >\r\n                        <LineChart\r\n                            data={averageEngagement}\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Posting habits'}\r\n                    >\r\n                        <BarChart\r\n                            title = {'Posting habits '}\r\n                            data = { postingHabits }\r\n                            id={ key }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </EngagementWrapper>\r\n    )\r\n}\r\n\r\nEngagement.defaultProps = {\r\n    key:0,\r\n}\r\n\r\nexport default Engagement;","import { useContext, createContext } from \"react\";\r\n\r\nconst usersContext = createContext([]);\r\n\r\nfunction useUsers() {\r\n    return useContext(usersContext);\r\n  }\r\n\r\nexport {usersContext, useUsers}","import 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport AccountTabs from './Containers/AccountTabs';\nimport HorizontalMenu from './Containers/HorizontalMenu';\nimport Header from './Containers/Header';\n\nimport Overview from './Pages/Public/Overview';\nimport Posts from './Pages/Public/Posts';\nimport HistoricStats from './Pages/Public/HistoricStats';\nimport Demographics from './Pages/Public/Demographics';\nimport Hashtag from './Pages/Public/Hashtag';\nimport Engagement from './Pages/Public/Engagement';\n\nimport axios from 'axios';\nimport { usersContext } from './Context';\nimport Utils from './Utils';\n\nconst url='https://boiling-coast-31813.herokuapp.com/getProfile';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    accounts:[],\n    userActive:null,\n    indexActive:0\n  })\n\n  useEffect(()=>{\n\n    axios({\n      method: \"POST\",\n      url: url,\n      data: {username:\"instaescuela\"},\n      headers: {\n          'Content-Type': 'application/json',\n      },\n    })\n    .then(data => {\n      if(data && !data.data.error){\n        console.log(data.data.business_discovery);\n        let aux = state.accounts.slice(0);\n        aux.push(data.data.business_discovery);\n        let users;\n        if(!state.userActive)\n          users = {...state, accounts:aux, userActive: aux[0] };\n        else\n          users = {...state, accounts:aux, userActive: aux[aux.length-1], indexActive:aux.length-1 };\n        setState(users);\n      }\n    })\n    .catch((error)=>{\n      console.error('error',error)\n    });\n    \n  },[]);\n\n  const handleChangeUser = (index) => {\n    setState({...state, userActive: state.accounts[index], indexActive:index});\n  }\n\n  const handleSearch = (data) => {\n    let aux = state.accounts.slice(0);\n    aux.push(data);\n    let users;\n    if(!state.userActive)\n      users = {...state, accounts:aux, userActive: aux[0] };\n    else\n      users = {...state, accounts:aux, userActive: aux[aux.length-1], indexActive:aux.length-1 };\n    setState(users);\n  }\n\n  const handleRemove = (key) => {\n    let aux = state.accounts.slice(0);\n    aux.splice(key,1);\n    let users;\n    if(!state.userActive)\n      users = {...state, accounts:aux, userActive: aux[0] };\n    else\n      if(key>0)\n        users = {...state, accounts:aux, userActive: aux[key-1], indexActive:key-1 };\n      else\n        users = {...state, accounts:aux, userActive: aux[key], indexActive:key };\n    setState(users);\n  }\n\n  return (\n    <usersContext.Provider value={state}>\n      <div className='App'>\n        <Header\n          onSearch = { handleSearch }\n        />\n        <div style={{padding: '2em 4em'}}>\n          <Router>\n            <AccountTabs\n              accounts={state.accounts}\n              onChange={handleChangeUser}\n              activeKey={state.indexActive}\n              removeAccount = {handleRemove}\n            /> \n            {state.userActive?\n              <HorizontalMenu/>\n              :''\n            }\n            <Switch>\n              <Route path=\"/\" exact>\n                {state.userActive?\n                  <React.Fragment>\n                    <Overview \n                      stats={state.userActive.stats?state.userActive.stats.data:[]}\n                      key={state.userActive.username}\n                    />\n                    <Engagement\n                      averageLikes = {state.userActive.average_likes}\n                      averageComment = {state.userActive.average_comments}\n                      averageEngagement = {state.userActive.stats?state.userActive.stats.data.slice(0,30).map(item=>Utils.round(item.engagement_rate.count)):[]}\n                      postingHabits = {state.userActive.posting_habit_count}\n                      engagement = {state.userActive.engagement}\n                      followers = {state.userActive.followers_count}\n                      key={state.indexActive}\n                    />\n                  </React.Fragment>\n                :''}\n              </Route>\n              <Route path=\"/posts\">\n                {state.userActive?\n                <Posts \n                  posts={state.userActive.media.data}\n                  avatar={state.userActive.profile_picture_url}\n                  key={state.userActive.username}\n                />\n                :''}\n              </Route>\n              <Route path=\"/historic\">\n                {state.userActive?\n                  <HistoricStats\n                    stats={state.userActive.stats?state.userActive.stats.data:[]}\n                    key={state.userActive.username}\n                  />\n                :''}\n              </Route>\n              <Route path=\"/demographics\">\n                <Demographics/>\n              </Route>\n              <Route path=\"/hashtag\">\n                {state.userActive?\n                  <Hashtag\n                    hashtag={state.userActive.hashtag}\n                    count={state.userActive.hashtag_count}\n                    key={state.indexActive}\n                    key={state.userActive.username}\n                  />\n                :''\n                }\n              </Route>\n              <Route path=\"/engagement\">\n                {state.userActive?\n                  <Engagement\n                    averageLikes = {state.userActive.average_likes}\n                    averageComment = {state.userActive.average_comments}\n                    averageEngagement = {[]}\n                    postingHabits = {state.userActive.posting_habit_count}\n                    engagement = {state.userActive.engagement}\n                    followers = {state.userActive.followers_count}\n                    key={state.userActive.username}\n                  />\n                :''\n                }\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </usersContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}