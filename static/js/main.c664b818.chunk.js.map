{"version":3,"sources":["Assets/Img/instagram.svg","Utils/index.js","Containers/AccountTabs/index.js","Containers/HorizontalMenu/index.js","Components/Button/index.js","Components/Avatar/index.js","Components/Post/index.js","Pages/Public/Posts/index.js","App.js","reportWebVitals.js","index.js"],"names":["utils","getNumber","number","result","round","getHashtagFromPost","posts","aux","i","length","aux2","caption","split","num","decimales","signo","Math","toString","formatDate","date","dateToReturn","newDate","Date","hour","parseInt","hours","getMonth","getDate","getFullYear","getMinutes","error","replaceAll","string","search","replace","join","TitleWrapper","styled","div","TabsWrapper","EngagementValues","min","max","percent","TabPane","Tabs","AccountTabs","accounts","useState","activeKey","state","setState","hideAdd","onChange","type","map","pane","index","tab","data","className","src","profile_picture_url","alt","username","ig","name","style","whiteSpace","biography","href","website","target","followers_count","follows_count","media_count","format","width","status","flag","defaultProps","options","title","url","HorizontalMenuWrapper","HorizontalMenu","option","to","activeClassName","exact","ButtonWrapper","Button","children","onClick","AvatarWrapper","Avatar","userName","PostWrapper","Post","avatar","timestamp","media_url","media_type","PostsWrapper","Posts","postCount","setPostCount","gutter","slice","xs","span","lg","App","useEffect","axios","method","then","profile","console","log","business_discovery","media","push","catch","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c664b818.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.c1cb19ae.svg\";","const utils = {\r\n    getNumber: (number) => {\r\n        let result=0;\r\n        if(number>=1000 && number<1000000) {\r\n            result = number/1000;\r\n            result = utils.round(result, 1);\r\n            return `${result} K`;\r\n        }\r\n        if(number>=1000000){\r\n            result = number/1000000;\r\n            result = utils.round(result, 1);\r\n            return `${result} M`;\r\n        }\r\n        return number;\r\n    },\r\n    getHashtagFromPost: (posts) => {\r\n        let aux = [];\r\n        for(let i=0;i<posts.length;i++){\r\n            let aux2 = posts[i].caption.split('#');\r\n            aux = [...aux, aux2];\r\n        }\r\n        return aux;\r\n    },\r\n    round: (num, decimales = 2) => {\r\n        var signo = (num >= 0 ? 1 : -1);\r\n        num = num * signo;\r\n        if (decimales === 0) //con 0 decimales\r\n            return signo * Math.round(num);\r\n        // round(x * 10 ^ decimales)\r\n        num = num.toString().split('e');\r\n        num = Math.round(+(num[0] + 'e' + (num[1] ? (+num[1] + decimales) : decimales)));\r\n        // x * 10 ^ (-decimales)\r\n        num = num.toString().split('e');\r\n        return signo * (num[0] + 'e' + (num[1] ? (+num[1] - decimales) : -decimales));\r\n    },\r\n    formatDate: (date) => {\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ];\r\n        let dateToReturn;\r\n        try {\r\n            let newDate = new Date(date);\r\n            let hour = parseInt(date.split('T')[1].split(':')[0])\r\n            let hours = (hour>12)?(hour-12):hour;\r\n            dateToReturn = `${months[newDate.getMonth()]} ${newDate.getDate()}, ${newDate.getFullYear()} ${hours}:${newDate.getMinutes()} ${(hour>12)?'PM':'AM'}`;\r\n            \r\n        } catch (error) {\r\n            dateToReturn = '';\r\n        }\r\n        return dateToReturn;\r\n    },\r\n    replaceAll: (string, search, replace) => {\r\n        if (string === null) return \"\";\r\n        return string.split(search).join(replace);\r\n    },\r\n}\r\n\r\nexport default utils;","import React,{ useState } from 'react';\r\nimport { Tabs, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport ig from '../../Assets/Img/instagram.svg';\r\nimport utils from '../../Utils';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;  \r\n    align-items: center;\r\n    .avatar-container {\r\n        width: 2em;\r\n        display: flex;\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n    }\r\n    .title {\r\n        font-weight: 600;\r\n        margin-left: .5em;\r\n    }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n    padding: 1em 0;\r\n    h3 {\r\n        font-size: 2.25em;\r\n        font-weight: 600;\r\n        margin: 0;\r\n    }\r\n    .tab-content {\r\n        background-color: #fff;\r\n        border-radius: 0 .75em .75em .75em;\r\n        padding: 3em;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .avatar-container {\r\n            position: relative;\r\n            width: min-content;\r\n            height: min-content;\r\n            >span {\r\n                border-radius: 50%;\r\n                overflow: hidden;\r\n                width: 12em;\r\n                display: flex;\r\n            }\r\n            .ig-logo {\r\n                width: 3em;\r\n                border-radius: 50%;\r\n                position: absolute;\r\n                bottom: 0;\r\n                right: 0;\r\n                border: 2px solid #fff;\r\n            }\r\n        }\r\n        .description {\r\n            padding: 0 2em 0 2em;\r\n            display: flex;\r\n            flex-direction: column;\r\n            color: var(--secondary-text-color);\r\n            font-size: 1.25em;\r\n            width: 60%;\r\n            .name {\r\n                color: var(--main-text-color)\r\n            }\r\n            .account {\r\n                display: flex;\r\n                align-items: center;\r\n                .type {\r\n                    padding: .25em 1em;\r\n                    background-color: var(--hastag-bg-color);\r\n                    color: var(--secondary-text-color);\r\n                    border-radius: .5em;\r\n                    height: max-content;\r\n                    margin-left: .5em;\r\n                }\r\n            }\r\n        }\r\n        .numbers-info {\r\n            .numbers {\r\n                display: flex;\r\n                h3 {\r\n                    display: block ruby; \r\n                }\r\n                >div {\r\n                    padding: 1em;\r\n                    span {\r\n                        color: var(--secondary-text-color);\r\n                    }\r\n                }\r\n            }\r\n            .engagement-data {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                div {\r\n                    text-align: center;\r\n                }\r\n                .engagement-values {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    margin-top: 1em;\r\n                    font-weight: 600;\r\n                    .range-active {\r\n                        &.successfully{\r\n                            color: var(--successfully-color);\r\n                        }\r\n                        &.error{\r\n                            color: var(--error-color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .ant-tabs-top > .ant-tabs-nav, .ant-tabs-bottom > .ant-tabs-nav, .ant-tabs-top > div > .ant-tabs-nav, .ant-tabs-bottom > div > .ant-tabs-nav {\r\n        margin: 0;\r\n    }\r\n    .ant-tabs-card.ant-tabs-top > .ant-tabs-nav .ant-tabs-tab, .ant-tabs-card.ant-tabs-top > div > .ant-tabs-nav .ant-tabs-tab {\r\n        border-radius: .75em .75em 0 0 ;\r\n        padding: 1em;\r\n    }\r\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\r\n        color: var(--main-text-color);\r\n    }\r\n    .progress-children {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        .title {\r\n            font-size: .5em;\r\n        }\r\n        .value {\r\n            margin-bottom: .25em;\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst engagementValue = 2.4;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst AccountTabs = ({accounts}) => {\r\n\r\n    const [state, setState] = useState({\r\n        activeKey:'0'\r\n    });\r\n\r\n    const handleChange = (activeKey) => {\r\n        setState({...state, activeKey});\r\n    }\r\n\r\n    const userTabTitle = (data) => {\r\n        return (\r\n            <TitleWrapper>\r\n                <span className='avatar-container'>\r\n                    <img src={data.profile_picture_url} alt=''/>\r\n                </span>\r\n                <span className='title'>{data.username}</span>\r\n            </TitleWrapper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TabsWrapper>\r\n            <Tabs\r\n                hideAdd\r\n                onChange={handleChange}\r\n                activeKey={state.activeKey}\r\n                type=\"editable-card\"\r\n            >\r\n                {accounts.map((pane, index) => (\r\n                    <TabPane tab={userTabTitle(pane)} key={`${index}`}>\r\n                        <div className='tab-content'>\r\n                            <div className='avatar-container'>\r\n                                <span><img src={pane.profile_picture_url} alt=''/></span>\r\n                                <span className='ig-logo'><img src={ig} alt=''/></span>\r\n                            </div>\r\n                            <div className='description'>\r\n                                <span className='account'><h3>{pane.username}</h3><span className='type'>{pane.type}</span></span>\r\n                                <span className='name'>{pane.name}</span>\r\n                                <span  style={{whiteSpace:'pre-line'}}>{pane.biography}</span>\r\n                                <span><a href={pane.website} target='_blank'>{pane.website}</a></span>\r\n                            </div>\r\n                            <div className='numbers-info'>\r\n                                <div className='numbers'>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.followers_count)}</h3>\r\n                                        <span>Followers</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.follows_count)}</h3>\r\n                                        <span>Followings</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.media_count)}</h3>\r\n                                        <span>Posts</span> \r\n                                    </div>\r\n                                </div>\r\n                                <div className='engagement-data'>\r\n                                    <div>\r\n                                        <Progress type=\"circle\" percent={(2.4/3.8)*100} format={()=><div className='progress-children'><span className='value'>2.4</span><span className='title'>Engagement</span><span className='title'>rate</span></div>} width={100} status=\"exception\"/>\r\n                                        {/*<Progress type=\"circle\" percent={70} status=\"exception\" />*/}\r\n                                    </div>\r\n                                    <div className='engagement-values'>\r\n                                        {\r\n                                            EngagementValues.map((data, index)=>{\r\n                                                let flag = pane.followers_count>data.min && pane.followers_count<data.max;\r\n                                                return (\r\n                                                    <div key={index} className={flag?('range-active '+'error'):''}>\r\n                                                        {data.max>5000000000?`More than ${utils.getNumber(data.min)} followers: ${data.percent}`:`From ${utils.getNumber(data.min)} to ${utils.getNumber(data.max)} followers: ${data.percent}`}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                ))}\r\n            </Tabs>\r\n        </TabsWrapper>\r\n    )\r\n}\r\n\r\nAccountTabs.defaultProps = {\r\n    accounts:[],\r\n}\r\n\r\nexport default AccountTabs;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst options = [\r\n    {\r\n        title:'Overview',\r\n        url:'/'\r\n    },\r\n    {\r\n        title:'Demographics',\r\n        url:'/demographics'\r\n    },\r\n    {\r\n        title:'Engagement',\r\n        url:'/engagement'\r\n    },\r\n    {\r\n        title:'Mentions',\r\n        url:'/mentions'\r\n    },\r\n    {\r\n        title:'Historic Stats',\r\n        url:'/historic'\r\n    },\r\n    {\r\n        title:'Posts',\r\n        url:'/posts'\r\n    },\r\n]\r\n\r\nconst HorizontalMenuWrapper = styled.div`\r\n    padding: 0 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    margin-bottom: 1em;\r\n    display: flex;\r\n    .menu-item {\r\n        font-weight: 600;\r\n        width: max-content;\r\n        padding: 1em 1em;\r\n        margin: 0 .5em;\r\n        display: block ruby;\r\n        color: var(--main-text-color);\r\n    }\r\n    .menu-item-active {\r\n        border-bottom: 2px solid var(--main-color);\r\n    }\r\n\r\n`;\r\n\r\nconst HorizontalMenu = () => {\r\n    return (\r\n        <HorizontalMenuWrapper>\r\n            {options.map((option,index)=>\r\n                <NavLink key={index} to={option.url} activeClassName='menu-item-active' exact>\r\n                    <div className={'pointer menu-item'}>\r\n                        {option.title}\r\n                    </div>\r\n                </NavLink>\r\n            )}\r\n        </HorizontalMenuWrapper>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenu;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button as ButtonAntd} from 'antd';\r\n\r\nconst ButtonWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    return (\r\n        <ButtonWrapper onClick={handleClick}>\r\n            <ButtonAntd>\r\n                { children }\r\n            </ButtonAntd>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ig from '../../Assets/Img/instagram.svg';\r\n\r\nconst AvatarWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    .avatar-image {\r\n        width: 3em;\r\n        height: 3em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    .ig-logo {\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        position: absolute;\r\n        left: 2.5em;\r\n        bottom: 0;\r\n    }\r\n    .user-name {\r\n        font-weight: 600;\r\n        margin-left: 1em;\r\n        font-size: 1em;\r\n    }\r\n`;\r\n\r\nconst Avatar = ({src, userName}) => {\r\n    return (\r\n        <AvatarWrapper>\r\n            <div className='avatar-image'>\r\n                <img src={src} alt='' />\r\n            </div>\r\n            <div className='ig-logo'>\r\n                <img src={ig} alt='' />\r\n            </div>\r\n            <div className='user-name'>{userName}</div>\r\n        </AvatarWrapper>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport utils from '../../Utils';\r\nimport Avatar from '../Avatar';\r\n\r\nconst PostWrapper = styled.div`\r\n    margin: .5em;\r\n    border-radius: 1em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n    .header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        .date {\r\n            color: var(--secondary-text-color)\r\n        }\r\n    }\r\n    .post-image {\r\n        position: relative;\r\n        display: flex;\r\n        .image-footer {\r\n            position: absolute;\r\n            bottom: .5em;\r\n            left: 1em;\r\n            display: flex;\r\n            .engagement, .media-type {\r\n                background-color: var(--secondary-bg-color);\r\n                box-shadow: 2px 5px 15px 3px rgba(0, 0, 0, 0.09);\r\n                padding: .5em 1em;\r\n                margin-right: 1em;\r\n                font-weight: 600;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Post = ({data, avatar, userName}) => {\r\n    if(data)\r\n        return (\r\n            <PostWrapper>\r\n                <div>\r\n                    <div className='header'>\r\n                        <div>\r\n                            <Avatar \r\n                                src={avatar}\r\n                                userName={userName}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                        <div className='date'>{utils.formatDate(data.timestamp)+''}</div>\r\n                    </div>\r\n                    <span className='post-image'>\r\n                        <img src={data.media_url} alt=''/>\r\n                        <div className='image-footer'>\r\n                            <div className='media-type'>{data.media_type==='IMAGE'?'Photo':'Carousel'}</div>\r\n                            <div className='engagement'>Engagement</div>\r\n                        </div>\r\n                    </span>\r\n                    <div className='content'>\r\n                        {data.caption}\r\n                    </div>\r\n                </div>\r\n            </PostWrapper>\r\n        )\r\n    else \r\n        return (\r\n            ''\r\n        )\r\n}\r\n\r\nPost.defaultProps = {\r\n    data: null,\r\n}\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\n\r\nimport Button from '../../../Components/Button';\r\nimport Post from '../../../Components/Post';\r\n\r\nconst PostsWrapper = styled.div`\r\n    .lazy-load-post-container {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 2em;\r\n    }\r\n`;\r\n\r\nconst Npost = 15;\r\n\r\nconst Posts = ({posts}) => {\r\n\r\n    const [postCount, setPostCount] = useState(Npost);\r\n\r\n    const handlePostCount = () => {\r\n        if((postCount+Npost)<posts.length) {\r\n            setPostCount(postCount+Npost);\r\n        }\r\n        else {\r\n            setPostCount(posts.length);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PostsWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                {posts.slice(0,postCount).map((data,index)=>{\r\n                    return (\r\n                        <Col xs={{ span: 24 }} lg={{ span: 8 }} key={index}>\r\n                            <Post\r\n                                data={data}\r\n                                avatar={'https://scontent.fccs5-1.fna.fbcdn.net/v/t51.2885-15/160749207_1118035928708171_7198024186681508085_n.jpg?_nc_cat=111&ccb=1-3&_nc_sid=86c713&_nc_ohc=gAUSSR9kURMAX-Ebt47&_nc_ht=scontent.fccs5-1.fna&oh=8c05a3732e9c81925abb3eac0f8f6abf&oe=609CA294'}\r\n                                userName='instaescuela'\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            {postCount!==posts.length?\r\n            <div className='lazy-load-post-container'>\r\n                <Button onClick={handlePostCount}>\r\n                    Load more posts\r\n                </Button>\r\n            </div>\r\n            :''}\r\n        </PostsWrapper>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    posts: [],\r\n}\r\n\r\nexport default Posts;","import 'antd/dist/antd.css';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nimport AccountTabs from './Containers/AccountTabs';\nimport HorizontalMenu from './Containers/HorizontalMenu';\nimport Posts from './Pages/Public/Posts';\n\nimport axios from 'axios';\nimport utils from './Utils';\n\nconst url='https://boiling-coast-31813.herokuapp.com/getProfile';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    accounts:[],\n    posts:[]\n  })\n\n  useEffect(()=>{\n\n    axios({\n      method: \"POST\",\n      url: url,\n      data: {username:\"instaescuela\"},\n    })\n    .then(data => {\n      //console.log(data)\n      if(data && !data.data.profile.error){\n        console.log(data.data.profile.business_discovery);\n        let aux = state.accounts;\n        let posts = data.data.profile.business_discovery.media.data;\n        aux.push(data.data.profile.business_discovery);\n        setState({...state, accounts:aux, posts: posts})\n        //.log(utils.getHashtagFromPost(data.data.profile.lastPosts))\n      }\n    })\n    .catch((error)=>console.error(error));\n    \n  },[]);\n\n  return (\n    <div className='App'>\n      <Router>\n        <AccountTabs\n          accounts={state.accounts}\n        />\n        <HorizontalMenu/>\n        <Switch>\n          <Route path=\"/posts\">\n            <Posts \n              posts={state.posts}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}