{"version":3,"sources":["Assets/Img/instagram.svg","Utils/index.js","Containers/AccountTabs/index.js","Containers/HorizontalMenu/index.js","Components/Input/index.js","Containers/Header/index.js","Components/Card/index.js","Pages/Public/Overview/index.js","Components/Button/index.js","Components/Avatar/index.js","Components/Post/index.js","Pages/Public/Posts/index.js","Pages/Public/HistoricStats/index.js","Pages/Public/Demographics/index.js","Components/PieChart/index.js","Pages/Public/Hashtag/index.js","Components/BarChart/index.js","Components/LineChart/index.js","Pages/Public/Engagement/index.js","Context/index.js","App.js","reportWebVitals.js","index.js"],"names":["utils","getNumber","number","result","round","getHashtagFromPost","posts","aux","i","length","aux2","caption","split","num","decimales","signo","Math","toString","formatDate","date","dateToReturn","newDate","Date","hour","parseInt","hours","getMonth","getDate","getFullYear","getMinutes","error","replaceAll","string","search","replace","join","TitleWrapper","styled","div","TabsWrapper","EngagementValues","min","max","percent","TabPane","Tabs","AccountTabs","accounts","onChange","activeKey","hideAdd","type","map","pane","index","tab","data","className","src","profile_picture_url","alt","username","ig","name","style","whiteSpace","biography","href","website","target","followers_count","follows_count","media_count","engagement","width","status","format","flag","defaultProps","options","title","url","HorizontalMenuWrapper","HorizontalMenu","option","to","activeClassName","exact","InputWrapper","input","InputContainer","Input","placeholder","e","value","SearchOutlined","HeaderWrapper","Header","event","CardWrapper","Card","children","OverviewWrapper","Overview","gutter","xs","span","md","lg","ButtonWrapper","Button","onClick","AvatarWrapper","Avatar","userName","PostWrapper","Post","avatar","timestamp","media_type","media_url","controls","PostsWrapper","Posts","useState","postCount","setPostCount","slice","display","HistoricStatsWrapper","columns","dataIndex","key","render","item","diference","count","prev_count","Utils","HistoricStats","stats","following_count","engagement_rate","reverse","dataSource","DemographicsWrapper","Demographics","PieWrapper","colors","PieChart","id","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","config","labels","datasets","label","backgroundColor","hoverOffset","legend","position","cutoutPercentage","height","HashtagWrapper","Hashtag","hashtag","hashtag_count","ChartWrapper","BarChart","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartConf","setChartConf","useEffect","tooltips","callbacks","tooltipItem","yLabel","LineChart","EngagementWrapper","EngagementBar","props","barPercent","maxValuePosition","Engagement","averageLikes","averageComment","averageEngagement","postingHabits","followers","engagementRange","filter","isPositive","percentage","placement","InfoCircleOutlined","usersContext","createContext","App","userActive","indexActive","state","setState","axios","method","headers","then","console","log","business_discovery","users","push","catch","Provider","padding","path","Fragment","average_likes","average_comments","posting_habit_count","media","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6TAAe,MAA0B,sC,QCAnCA,EAAQ,CACVC,UAAW,SAACC,GACR,IAAIC,EAAO,EACX,OAAGD,GAAQ,KAAQA,EAAO,KACtBC,EAASD,EAAO,IAChBC,EAASH,EAAMI,MAAMD,EAAQ,GACvB,GAAN,OAAUA,EAAV,OAEDD,GAAQ,KACPC,EAASD,EAAO,IAChBC,EAASH,EAAMI,MAAMD,EAAQ,GACvB,GAAN,OAAUA,EAAV,OAEGD,GAEXG,mBAAoB,SAACC,GAEjB,IADA,IAAIC,EAAM,GACFC,EAAE,EAAEA,EAAEF,EAAMG,OAAOD,IAAI,CAC3B,IAAIE,EAAOJ,EAAME,GAAGG,QAAQC,MAAM,KAClCL,EAAG,sBAAOA,GAAP,CAAYG,IAEnB,OAAOH,GAEXH,MAAO,SAACS,GAAwB,IAAnBC,EAAkB,uDAAN,EACjBC,EAASF,GAAO,EAAI,GAAK,EAE7B,OADAA,GAAYE,EACM,IAAdD,EACOC,EAAQC,KAAKZ,MAAMS,IAE9BA,EAAMA,EAAII,WAAWL,MAAM,KAIpBG,IADPF,GAFAA,EAAMG,KAAKZ,QAAQS,EAAI,GAAK,KAAOA,EAAI,IAAOA,EAAI,GAAKC,EAAaA,MAE1DG,WAAWL,MAAM,MACP,GAAK,KAAOC,EAAI,IAAOA,EAAI,GAAKC,GAAcA,MAEtEI,WAAY,SAACC,GACT,IAcIC,EACJ,IACI,IAAIC,EAAU,IAAIC,KAAKH,GACnBI,EAAOC,SAASL,EAAKP,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC9Ca,EAASF,EAAK,GAAKA,EAAK,GAAIA,EAChCH,EAAY,UAnBD,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAOyBC,EAAQK,YAArB,YAAoCL,EAAQM,UAA5C,aAA0DN,EAAQO,cAAlE,YAAmFH,EAAnF,YAA4FJ,EAAQQ,aAApG,YAAqHN,EAAK,GAAI,KAAK,MAEjJ,MAAOO,GACLV,EAAe,GAEnB,OAAOA,GAEXW,WAAY,SAACC,EAAQC,EAAQC,GACzB,OAAe,OAAXF,EAAwB,GACrBA,EAAOpB,MAAMqB,GAAQE,KAAKD,KAI1BlC,I,OC7DToC,EAAeC,IAAOC,IAAV,6RAeZC,EAAcF,IAAOC,IAAV,8yHA0HXE,EAAmB,CACrB,CACIC,IAAK,IACLC,IAAK,IACLC,QAAS,MAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,KACLC,QAAS,MAMTC,EAAYC,IAAZD,QAEFE,EAAc,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAiBtC,OACI,cAACV,EAAD,UACI,cAAC,IAAD,CACIW,SAAO,EACPF,SAnBS,SAACC,GAClBD,EAASxB,SAASyB,KAmBVA,UAAS,UAAKA,GACdE,KAAK,gBAJT,SAMKJ,EAASK,KAAI,SAACC,EAAMC,GAAP,OACV,cAACV,EAAD,CAASW,KApBHC,EAoBqBH,EAlBnC,eAACjB,EAAD,WACI,sBAAMqB,UAAU,mBAAhB,SACI,qBAAKC,IAAKF,EAAKG,oBAAqBC,IAAI,OAE5C,sBAAMH,UAAU,QAAhB,SAAyBD,EAAKK,eAc1B,SACI,sBAAKJ,UAAU,cAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,+BAAM,qBAAKC,IAAKL,EAAKM,oBAAqBC,IAAI,OAC9C,sBAAMH,UAAU,UAAhB,SAA0B,qBAAKC,IAAKI,EAAIF,IAAI,UAEhD,sBAAKH,UAAU,cAAf,UACI,uBAAMA,UAAU,UAAhB,UAA0B,6BAAKJ,EAAKQ,WAAc,sBAAMJ,UAAU,OAAhB,SAAwBJ,EAAKF,UAC/E,sBAAMM,UAAU,OAAhB,SAAwBJ,EAAKU,OAC7B,sBAAOC,MAAO,CAACC,WAAW,YAA1B,SAAwCZ,EAAKa,YAC7C,+BAAM,mBAAGC,KAAMd,EAAKe,QAASC,OAAO,SAA9B,SAAwChB,EAAKe,eAEvD,sBAAKX,UAAU,eAAf,UACI,sBAAKA,UAAU,UAAf,UACI,gCACI,6BAAKzD,EAAMC,UAAUoD,EAAKiB,mBAC1B,gDAEJ,gCACI,6BAAKtE,EAAMC,UAAUoD,EAAKkB,iBAC1B,iDAEJ,gCACI,6BAAKvE,EAAMC,UAAUoD,EAAKmB,eAC1B,+CAGR,sBAAKf,UAAU,kBAAf,UACI,8BACI,cAAC,IAAD,CAAUN,KAAK,SAASR,QAAU3C,EAAMI,MAAMiD,EAAKoB,YAAY,IAAK,IAAMC,MAAO,IAAKC,OAAW3E,EAAMI,MAAMiD,EAAKoB,YAAY,IAAK,IAAK,IAAK,YAAY,GAAIG,OAAQ,kBAAI,sBAAKnB,UAAU,oBAAf,UAAmC,sBAAMA,UAAU,QAAhB,SAAyBzD,EAAMI,MAAMiD,EAAKoB,cAAmB,sBAAMhB,UAAU,QAAhB,wBAAyC,sBAAMA,UAAU,QAAhB,0BAGtT,qBAAKA,UAAU,oBAAf,SAEQjB,EAAiBY,KAAI,SAACI,EAAMF,GACxB,IAAIuB,EAAOxB,EAAKiB,gBAAgBd,EAAKf,KAAOY,EAAKiB,gBAAgBd,EAAKd,IACtE,OACI,qBAAiBe,UAAWoB,EAAM,qBAAyB,GAA3D,SACKrB,EAAKd,IAAI,IAAT,oBAAiC1C,EAAMC,UAAUuD,EAAKf,KAAtD,uBAAyEe,EAAKb,SAA9E,eAAgG3C,EAAMC,UAAUuD,EAAKf,KAArH,eAAgIzC,EAAMC,UAAUuD,EAAKd,KAArJ,uBAAwKc,EAAKb,UADxKW,kBArC1C,UAA0CA,IApBrC,IAACE,UA0E1BV,EAAYgC,aAAe,CACvB/B,SAAS,IAGED,I,MAAAA,ICrQTiC,EAAU,CACZ,CACIC,MAAM,WACNC,IAAI,KAER,CACID,MAAM,eACNC,IAAI,iBAER,CACID,MAAM,aACNC,IAAI,eAER,CACID,MAAM,WACNC,IAAI,aAER,CACID,MAAM,UACNC,IAAI,YAER,CACID,MAAM,iBACNC,IAAI,aAER,CACID,MAAM,QACNC,IAAI,WAINC,EAAwB7C,IAAOC,IAAV,4cAkCZ6C,EAdQ,WACnB,OACI,cAACD,EAAD,UACKH,EAAQ3B,KAAI,SAACgC,EAAO9B,GAAR,OACT,cAAC,IAAD,CAAqB+B,GAAID,EAAOH,IAAKK,gBAAgB,mBAAmBC,OAAK,EAA7E,SACI,qBAAK9B,UAAW,oBAAhB,SACK2B,EAAOJ,SAFF1B,S,SCvDxBkC,EAAenD,IAAOoD,MAAV,yOAUZC,EAAiBrD,IAAOC,IAAV,yJASdqD,EAAQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAa5C,EAAc,EAAdA,SAOzB,OACI,eAAC0C,EAAD,WACI,cAACF,EAAD,CAAcI,YAAaA,EAAa5C,SAP3B,SAAC6C,GAClB,IAAIC,EAAQD,EAAExB,OAAOyB,MACrB9C,EAAS,CAAE8C,aAMP,sBAAMrC,UAAU,iBAAhB,SAAiC,cAACsC,EAAA,EAAD,UAK7CJ,EAAMb,aAAe,CACjBc,YAAa,IAGFD,I,IAAAA,I,kBCpCTK,EAAgB3D,IAAOC,IAAV,2WA6DJ2D,EA1CA,WAmBX,OACI,eAACD,EAAD,WACI,sBAAKvC,UAAU,WAAf,UACI,uCAGA,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACImC,YAAY,kBACZ5C,SA1BC,SAACkD,YA8Bd,sBAAKzC,UAAU,YAAf,iBAEI,gD,kBCxDV0C,EAAc9D,IAAOC,IAAV,qXAgBX8D,EAAO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUrB,EAAY,EAAZA,MACtB,OACI,eAACmB,EAAD,WACKnB,EACG,qBAAKvB,UAAU,QAAf,SAAwBuB,IAC3B,GACD,qBAAKvB,UAAU,UAAf,SAA2B4C,QAKvCD,EAAKtB,aAAe,CAChBE,MAAM,MAGKoB,I,IAAAA,IC7BTE,EAAkBjE,IAAOC,IAAV,8BA6CNiE,EAzCE,WACb,OACI,cAACD,EAAD,UACA,eAAC,IAAD,CACIE,OAAQ,CAAC,GAAI,IADjB,UAGI,cAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,GAAnD,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,GAAnD,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,GAAnD,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,GAAnD,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,MAIJ,cAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,Y,SCrCVG,GAAgBxE,IAAOC,IAAV,8BAIbwE,GAAS,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,SAAUU,EAAc,EAAdA,QAIxB,OACI,cAACF,GAAD,CAAeE,QAJC,WAChBA,KAGA,SACI,cAAC,KAAD,UACMV,OAMlBS,GAAOhC,aAAe,GAIPgC,I,MAAAA,MCrBTE,GAAgB3E,IAAOC,IAAV,kkBA0CJ2E,GAdA,SAAC,GAAqB,IAApBvD,EAAmB,EAAnBA,IAAKwD,EAAc,EAAdA,SAClB,OACI,eAACF,GAAD,WACI,qBAAKvD,UAAU,eAAf,SACI,qBAAKC,IAAKA,EAAKE,IAAI,OAEvB,qBAAKH,UAAU,UAAf,SACI,qBAAKC,IAAKI,EAAIF,IAAI,OAEtB,qBAAKH,UAAU,YAAf,SAA4ByD,QCnClCC,GAAc9E,IAAOC,IAAV,0/BAqCX8E,GAAO,SAAC,GAA8B,IAA7B5D,EAA4B,EAA5BA,KAAM6D,EAAsB,EAAtBA,OAAQH,EAAc,EAAdA,SACzB,OAAG1D,EAEK,cAAC2D,GAAD,UACI,gCACI,sBAAK1D,UAAU,SAAf,UACI,8BACI,cAAC,GAAD,CACIC,IAAK2D,EACLH,SAAUA,MAGlB,wBAGA,qBAAKzD,UAAU,OAAf,SAAuBzD,EAAMkB,WAAWsC,EAAK8D,WAAW,QAE5D,uBAAM7D,UAAU,aAAhB,UACuB,UAAlBD,EAAK+D,WACF,qBAAK7D,IAAKF,EAAKgE,UAAW5D,IAAI,KAE9B,uBAAOF,IAAKF,EAAKgE,UAAW5D,IAAI,GAAG6D,SAAS,aAEhD,sBAAKhE,UAAU,eAAf,UACuB,UAAlBD,EAAK+D,WACF,qBAAK9D,UAAU,aAAf,SAA+C,UAAlBD,EAAK+D,WAAqB,QAAQ,aAE/D,qBAAK9D,UAAU,aAAf,mBAEJ,sBAAKA,UAAU,aAAf,oBAAgCzD,EAAMI,MAAMoD,EAAKiB,YAAjD,4BAGR,qBAAKhB,UAAU,UAAf,SACKD,EAAK7C,eAOlB,IAIZyG,GAAKtC,aAAe,CAChBtB,KAAM,MAGK4D,I,GAAAA,MCpFTM,GAAerF,IAAOC,IAAV,gJAUZqF,GAAQ,SAAC,GAAa,IAAZrH,EAAW,EAAXA,MAAW,EAEWsH,mBAJxB,IAEa,mBAEhBC,EAFgB,KAELC,EAFK,KAavB,OACI,eAACJ,GAAD,WACI,cAAC,IAAD,CACIlB,OAAQ,CAAC,GAAI,IADjB,SAGKlG,EAAMyH,MAAM,EAAEF,GAAWzE,KAAI,SAACI,EAAKF,GAChC,OACI,cAAC,IAAD,CAAKmD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,GAAiB1C,MAAO,CAACgE,QAAS,QAArF,SACI,cAAC,GAAD,CACIxE,KAAMA,EACN6D,OAAQ,8OACRH,SAAS,kBAJ4C5D,QAUxEuE,IAAYvH,EAAMG,OACnB,qBAAKgD,UAAU,2BAAf,SACI,cAAC,GAAD,CAAQsD,QA5BI,WAChBc,EAPE,GAOevH,EAAMG,OACvBqH,EAAaD,EARX,IAWFC,EAAaxH,EAAMG,SAuBf,+BAIH,OAKbkH,GAAM7C,aAAe,CACjBxE,MAAO,IAGIqH,I,GAAAA,M,UCzDTM,GAAuB5F,IAAOC,IAAV,2pBA2BpB4F,GAAU,CACZ,CACElD,MAAO,OACPmD,UAAW,OACXC,IAAK,QAEP,CACEpD,MAAO,iBACPmD,UAAW,kBACXC,IAAK,kBACLC,OAAQ,SAACC,GACP,IAAIC,EAAY,EAGhB,OAFGD,EAAKE,QAAQF,EAAKG,YAAgC,IAAlBH,EAAKG,aACpCF,EAAYD,EAAKE,MAAMF,EAAKG,YAE5B,uBAAMhF,UAAU,OAAhB,UACK6E,EAAKE,MACO,IAAZD,EACG,sBAAM9E,UAAuB,OAA7B,mBAAgD8E,EAAU,EAAE,IAAI,IAAhE,OAAqEA,KACxE,QAKb,CACEvD,MAAO,kBACPmD,UAAW,kBACXC,IAAK,kBACLC,OAAQ,SAACC,GACP,IAAIC,EAAY,EAGhB,OAFGD,EAAKE,QAAQF,EAAKG,YAAgC,IAAlBH,EAAKG,aACpCF,EAAYD,EAAKE,MAAMF,EAAKG,YAE5B,uBAAMhF,UAAU,OAAhB,UACK6E,EAAKE,MACO,IAAZD,EACG,sBAAM9E,UAAuB,OAA7B,mBAAgD8E,EAAU,EAAE,IAAI,IAAhE,OAAqEA,KACxE,QAKb,CACEvD,MAAO,cACPmD,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,GACP,IAAIC,EAAY,EAGhB,OAFGD,EAAKE,QAAQF,EAAKG,YAAgC,IAAlBH,EAAKG,aACpCF,EAAYD,EAAKE,MAAMF,EAAKG,YAE5B,uBAAMhF,UAAU,OAAhB,UACK6E,EAAKE,MACO,IAAZD,EACG,sBAAM9E,UAAuB,OAA7B,mBAAgD8E,EAAU,EAAE,IAAI,IAAhE,OAAqEA,KACxE,QAKb,CACEvD,MAAO,kBACPmD,UAAW,kBACXC,IAAK,kBACLC,OAAQ,SAACC,GACP,IAAIC,EAAY,EAGhB,OAFGD,EAAKE,QAAQF,EAAKG,YAAgC,IAAlBH,EAAKG,aACpCF,EAAYD,EAAKE,MAAMF,EAAKG,YAE5B,uBAAMhF,UAAU,OAAhB,UACKiF,EAAMtI,MAAMkI,EAAKE,OACL,IAAZD,EACG,sBAAM9E,UAAuB,OAA7B,mBAAgD8E,EAAU,EAAE,IAAI,IAAhE,OAAqEA,KACxE,SAOXI,GAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBpF,EAAO,YAAIoF,EAAMxF,KAAI,SAACkF,EAAKhF,GAC3B,MAAO,CACH8E,IAAI9E,EACJnC,KAAMuH,EAAMxH,WAAWoH,EAAKnH,MAAMP,MAAM,UAAU,GAClD0D,gBAAgBgE,EAAKhE,gBACrBuE,gBAAiBP,EAAK/D,cACtBC,YAAY8D,EAAK9D,YACjBsE,gBAAiBR,EAAKQ,qBAE1BC,UAEJ,OACI,eAACd,GAAD,WACI,gDACA,qBAAKxE,UAAU,kBAAf,SACI,cAAC,KAAD,CAAOuF,WAAYxF,EAAM0E,QAASA,WAMlDS,GAAc7D,aAAe,CACzB8D,MAAM,IAGKD,I,MAAAA,MCvITM,GAAsB5G,IAAOC,IAAV,gCAYV4G,GARM,WACjB,OACI,cAACD,GAAD,4B,SCLFE,GAAa9G,IAAOC,IAAV,4HAOV8G,GAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAgBJ,IAAMC,GAAW,SAAC,GAAgB,IAAf7F,EAAc,EAAdA,KAAM8F,EAAQ,EAARA,GAAQ,EAbjC,WAA0B,IAAD,EACG1B,mBAAS,CAAC,EAAG,IADhB,mBACd2B,EADc,KACRC,EADQ,KAUrB,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAIiBS,GADK,mBACtBtF,EADsB,KAEvBuF,GAFuB,KAEd,CACXC,OAAO,YACF1G,EAAKJ,KAAI,SAAAkF,GAAI,OAAEA,EAAKnF,SAEzBgH,SAAU,CAAC,CACTC,MAAO,mBACP5G,KAAK,YAAKA,EAAKJ,KAAI,SAAAkF,GAAI,OAAEA,EAAKxC,UAC9BuE,gBAAgB,GAAD,OACVjB,IAELkB,YAAa,MAIbvF,EAAU,CACZwF,OAAQ,CACJC,SAAW9F,EAAM,KAAM,QAAQ,UAInC+F,iBAAkB,IAGtB,OACI,cAACtB,GAAD,UACI,cAAC,YAAD,CAAU3F,KAAI,eAAMyG,GAASlF,QAASA,EAASL,MAAO,GAAIgG,OAAQ,MADrDpB,IAMzBD,GAASvE,aAAe,CACpBtB,KAAM,GACN8F,GAAG,GAGQD,I,GAAAA,MCjETsB,GAAiBtI,IAAOC,IAAV,gcAiBdsI,GAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASrC,EAAgB,EAAhBA,MAAOJ,EAAS,EAATA,IAC/B,OACI,cAACuC,GAAD,UACI,eAAC,IAAD,CACInE,OAAQ,CAAC,GAAI,IADjB,UAGI,cAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAM1C,MAAO,CAACgE,QAAS,QAA1E,SACI,cAAC,EAAD,CACIhD,MAAO,kBADX,SAGI,qBAAKvB,UAAU,oBAAf,SAEQoH,EAAQ9C,MAAM,EAAE,IAAI3E,KAAI,SAACI,EAAMF,GAC3B,OACI,sBAAMG,UAAU,eAAhB,oBACSD,EAAK7C,QADd,YACyB+H,EAAMtI,MAAOoD,EAAKgF,MAAMA,EAAO,KADxD,MAAoClF,YAS5D,cAAC,IAAD,CAAKmD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,CACI1B,MAAO,WADX,SAGI,cAAC,GAAD,CACIxB,KAAMqH,EAAQ9C,MAAM,EAAE,IAAI3E,KAAI,SAAAI,GAAO,MAAO,CAACsC,MAAOtC,EAAKgF,MAAOrF,KAAM,IAAIK,EAAK7C,YAC/E2I,GAAKlB,QAIjB,cAAC,IAAD,CAAK3B,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,CACI1B,MAAO,oCADX,SAGI,qBAAKvB,UAAU,oBAAf,SAEQoH,EAAQzH,KAAI,SAACI,EAAMF,GACf,OACI,uBAAMG,UAAU,eAAhB,cACOD,EAAK7C,UADwB2C,kBAc5EsH,GAAQ9F,aAAe,CACnB+F,QAAQ,GACRC,cAAe,GAGJF,I,GAAAA,M,oBClFTG,GAAe1I,IAAOC,IAAV,gCAIZ0I,GAAW,SAAC,GAAyB,IAAvBhG,EAAsB,EAAtBA,MAAOxB,EAAe,EAAfA,KAAM8F,EAAS,EAATA,GAAS,EAEN1B,mBAAS,CACrCsC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACzIC,SAAU,CACR,CACEC,MAAOpF,EACPiG,MAAM,EACNC,YAAa,GACbb,gBAAiB,UACjBc,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBxI,KAAMA,MAxBwB,mBAEjCyI,EAFiC,KAEtBC,EAFsB,KA+CxC,OAJAC,qBAAU,WACRD,EAAa,2BAAID,GAAL,IAAgB9B,SAAU,CAAC,2BAAI8B,EAAU9B,SAAS,IAAxB,IAA4B3G,KAAMA,UACxE,CAAEA,IAGF,cAACuH,GAAD,UACE,cAAC,OAAD,CACEvH,KAAI,eAAMyI,GACVlH,QAAO,eArBG,CACdwF,OAAQ,CACNvC,SAAS,GAEXoE,SAAU,CACRC,UAAW,CACTjC,MAAO,SAASkC,GACd,OAAOA,EAAYC,eAWNjD,IASvB0B,GAASlG,aAAe,CACpBE,MAAO,GACPsE,GAAI,GAGO0B,I,GAAAA,MCjETD,GAAe1I,IAAOC,IAAV,gCAKZkK,GAAY,SAAC,GAAe,IAE5BhJ,EAAO,CACT0G,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACR,CACEC,MANyB,EAAZpF,MAObiG,MAAM,EACNC,YAAa,GACbb,gBAAiB,UACjBc,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBxI,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAgBrC,OACE,cAAC,GAAD,UACE,cAAC,QAAD,CACEuB,QAAO,eAfG,CACdwF,OAAQ,CACNvC,SAAS,GAEXoE,SAAU,CACRC,UAAW,CACTjC,MAAO,SAASkC,GACd,OAAOA,EAAYC,YASrB/I,KAAI,eAAMA,QAMlBgJ,GAAU1H,aAAe,CACrBE,MAAO,IAGIwH,I,MAAAA,MCtDTC,GAAoBpK,IAAOC,IAAV,0gBAsBjBE,GAAmB,CACrB,CACIC,IAAK,IACLC,IAAK,IACLC,QAAS,MAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,IACLC,QAAS,KAEb,CACIF,IAAK,IACLC,IAAK,KACLC,QAAS,MAIX+J,GAAgBrK,IAAOC,IAAV,w8FAaC,SAAAqK,GAAK,OAAIA,EAAMC,WAAaD,EAAMC,WAAa,UA8E3C,SAAAD,GAAK,OAAEA,EAAME,iBAAiBF,EAAME,iBAAiB,OAwF9DC,GAlFI,SAAC,GAAmG,IAAjGC,EAAgG,EAAhGA,aAAcC,EAAkF,EAAlFA,eAAgBC,EAAkE,EAAlEA,kBAAmBC,EAA+C,EAA/CA,cAAezI,EAAgC,EAAhCA,WAAY0I,EAAoB,EAApBA,UAAW/E,EAAS,EAATA,IACnGgF,EAAkB5K,GAAiB6K,QAAO,SAAA7J,GAAI,OAAEA,EAAKd,IAAIyK,GAAaA,EAAU3J,EAAKf,OAAK,GAC1F6K,EAAa7I,EAAW2I,EAAgBzK,QACxC4K,EAAa7E,EAAMtI,MAAMqE,EAAW2I,EAAgBzK,QAAQ,IAAI,GACtE,OACI,cAAC8J,GAAD,UACI,eAAC,IAAD,CACIjG,OAAQ,CAAC,GAAI,IADjB,UAGI,cAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,CACI1B,MAAM,kBADV,SAGI,eAAC0H,GAAD,CACIE,WAAU,eAAUW,EAAW,IAAI,IAAIA,EAA7B,aACVV,iBAAgB,UAAKU,EAAW,IAAK,IAAIA,EAAW,IAAK,IAAzC,KAChB9J,UAAW6J,EAAW,WAAW,GAHrC,UAKI,qBAAK7J,UAAU,kBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,mBAAhB,SAAoCiF,EAAMtI,MAAMqE,UAGxD,sBAAKhB,UAAU,eAAf,UACI,sBAAMA,UAAU,MAAhB,eACA,sBAAMA,UAAU,MAAhB,SAAuB2J,EAAgBzK,oBAKvD,cAAC,IAAD,CAAK8D,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,UACI,sBAAKjD,UAAU,eAAf,UACI,6BAAKiF,EAAMtI,MAAM2M,KACjB,sBAAKtJ,UAAU,kBAAf,0BAEI,cAAC,KAAD,CAAS+J,UAAU,MAAMxI,MAAO,qEAAhC,SACI,sBAAMvB,UAAU,iBAAhB,SAAiC,cAACgK,GAAA,EAAD,kBAMrD,cAAC,IAAD,CAAKhH,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,UACI,sBAAKjD,UAAU,eAAf,UACI,6BAAKiF,EAAMtI,MAAM4M,KACjB,sBAAKvJ,UAAU,kBAAf,6BAEI,cAAC,KAAD,CAAS+J,UAAU,MAAMxI,MAAO,wEAAhC,SACI,sBAAMvB,UAAU,iBAAhB,SAAiC,cAACgK,GAAA,EAAD,kBAMrD,cAAC,IAAD,CAAKhH,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,CACI1B,MAAO,qBADX,SAGI,cAAC,GAAD,CACIxB,KAAMyJ,QAIlB,cAAC,IAAD,CAAKxG,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAACD,KAAM,IAAKE,GAAI,CAAEF,KAAM,IAAnD,SACI,cAAC,EAAD,CACI1B,MAAO,iBADX,SAGI,cAAC,GAAD,CACIA,MAAS,kBACTxB,KAAS0J,EACT5D,GAAKlB,cCzO3BsF,GAAeC,wBAAc,ICgJpBC,OAzHf,WAAgB,IAAD,EAEahG,mBAAS,CACjC7E,SAAS,GACT8K,WAAW,KACXC,YAAY,IALD,mBAENC,EAFM,KAECC,EAFD,KAyCb,OAjCA7B,qBAAU,WAER8B,IAAM,CACJC,OAAQ,OACRjJ,IAdI,uDAeJzB,KAAM,CAACK,SAAS,gBAChBsK,QAAS,CACL,eAAgB,sBAGrBC,MAAK,SAAA5K,GACJ,GAAGA,IAASA,EAAKA,KAAK1B,MAAM,CAC1BuM,QAAQC,IAAI9K,EAAKA,KAAK+K,oBACtB,IAEIC,EAFAjO,EAAMwN,EAAMhL,SAASgF,MAAM,GAC/BxH,EAAIkO,KAAKjL,EAAKA,KAAK+K,oBAKjBC,EAHET,EAAMF,WAGH,2BAAOE,GAAP,IAAchL,SAASxC,EAAKsN,WAAYtN,EAAIA,EAAIE,OAAO,GAAIqN,YAAYvN,EAAIE,OAAO,IAFlF,2BAAOsN,GAAP,IAAchL,SAASxC,EAAKsN,WAAYtN,EAAI,KAGnDyN,EAASQ,OAGZE,OAAM,SAAC5M,GACNuM,QAAQvM,MAAM,QAAQA,QAGxB,IAOA,cAAC4L,GAAaiB,SAAd,CAAuB7I,MAAOiI,EAA9B,SACE,sBAAKtK,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKO,MAAO,CAAC4K,QAAS,WAAtB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CACE7L,SAAUgL,EAAMhL,SAChBC,SAZa,SAACM,GACxB0K,EAAS,2BAAID,GAAL,IAAYF,WAAYE,EAAMhL,SAASO,GAAQwK,YAAYxK,MAYzDL,UAAW8K,EAAMD,cAEnB,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,IAAItJ,OAAK,EAArB,SACGwI,EAAMF,WACP,eAAC,IAAMiB,SAAP,WACE,cAAC,EAAD,IAGA,cAAC,GAAD,CACE/B,aAAgBgB,EAAMF,WAAWkB,cACjC/B,eAAkBe,EAAMF,WAAWmB,iBACnC/B,kBAAqB,GACrBC,cAAiBa,EAAMF,WAAWoB,oBAClCxK,WAAcsJ,EAAMF,WAAWpJ,WAC/B0I,UAAaY,EAAMF,WAAWvJ,iBACzByJ,EAAMD,gBAGd,KAEH,cAAC,IAAD,CAAOe,KAAK,SAAZ,SACGd,EAAMF,WACP,cAAC,GAAD,CACEvN,MAAOyN,EAAMF,WAAWqB,MAAM1L,OAE/B,KAEH,cAAC,IAAD,CAAOqL,KAAK,YAAZ,SACGd,EAAMF,WACP,cAAC,GAAD,CACEjF,MAAOmF,EAAMF,WAAWjF,QAEzB,KAEH,cAAC,IAAD,CAAOiG,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACGd,EAAMF,WACP,cAAC,GAAD,CACEhD,QAASkD,EAAMF,WAAWhD,QAC1BrC,MAAOuF,EAAMF,WAAW/C,eACnBiD,EAAMD,aAEZ,KAGH,cAAC,IAAD,CAAOe,KAAK,cAAZ,SACGd,EAAMF,WACP,cAAC,GAAD,CACEd,aAAgBgB,EAAMF,WAAWkB,cACjC/B,eAAkBe,EAAMF,WAAWmB,iBACnC/B,kBAAqB,GACrBC,cAAiBa,EAAMF,WAAWoB,oBAClCxK,WAAcsJ,EAAMF,WAAWpJ,WAC/B0I,UAAaY,EAAMF,WAAWvJ,iBACzByJ,EAAMD,aAEZ,2BC3HFqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAStH,OACP,cAAC,IAAMuH,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.3c66fc88.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.c1cb19ae.svg\";","const utils = {\r\n    getNumber: (number) => {\r\n        let result=0;\r\n        if(number>=1000 && number<1000000) {\r\n            result = number/1000;\r\n            result = utils.round(result, 1);\r\n            return `${result} K`;\r\n        }\r\n        if(number>=1000000){\r\n            result = number/1000000;\r\n            result = utils.round(result, 1);\r\n            return `${result} M`;\r\n        }\r\n        return number;\r\n    },\r\n    getHashtagFromPost: (posts) => {\r\n        let aux = [];\r\n        for(let i=0;i<posts.length;i++){\r\n            let aux2 = posts[i].caption.split('#');\r\n            aux = [...aux, aux2];\r\n        }\r\n        return aux;\r\n    },\r\n    round: (num, decimales = 2) => {\r\n        var signo = (num >= 0 ? 1 : -1);\r\n        num = num * signo;\r\n        if (decimales === 0) //con 0 decimales\r\n            return signo * Math.round(num);\r\n        // round(x * 10 ^ decimales)\r\n        num = num.toString().split('e');\r\n        num = Math.round(+(num[0] + 'e' + (num[1] ? (+num[1] + decimales) : decimales)));\r\n        // x * 10 ^ (-decimales)\r\n        num = num.toString().split('e');\r\n        return signo * (num[0] + 'e' + (num[1] ? (+num[1] - decimales) : -decimales));\r\n    },\r\n    formatDate: (date) => {\r\n        const months = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ];\r\n        let dateToReturn;\r\n        try {\r\n            let newDate = new Date(date);\r\n            let hour = parseInt(date.split('T')[1].split(':')[0])\r\n            let hours = (hour>12)?(hour-12):hour;\r\n            dateToReturn = `${months[newDate.getMonth()]} ${newDate.getDate()}, ${newDate.getFullYear()} ${hours}:${newDate.getMinutes()} ${(hour>12)?'PM':'AM'}`;\r\n            \r\n        } catch (error) {\r\n            dateToReturn = '';\r\n        }\r\n        return dateToReturn;\r\n    },\r\n    replaceAll: (string, search, replace) => {\r\n        if (string === null) return \"\";\r\n        return string.split(search).join(replace);\r\n    }\r\n}\r\n\r\nexport default utils;","import React from 'react';\r\nimport { Tabs, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nimport ig from '../../Assets/Img/instagram.svg';\r\nimport utils from '../../Utils';\r\n\r\nconst TitleWrapper = styled.div`\r\n    display: flex;  \r\n    align-items: center;\r\n    .avatar-container {\r\n        width: 2em;\r\n        display: flex;\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n    }\r\n    .title {\r\n        font-weight: 600;\r\n        margin-left: .5em;\r\n    }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n    padding: 1em 0;\r\n    h3 {\r\n        font-size: 2.25em;\r\n        font-weight: 600;\r\n        margin: 0;\r\n    }\r\n    .tab-content {\r\n        background-color: #fff;\r\n        border-radius: 0 .75em .75em .75em;\r\n        padding: 3em;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .avatar-container {\r\n            position: relative;\r\n            width: min-content;\r\n            height: min-content;\r\n            >span {\r\n                border-radius: 50%;\r\n                overflow: hidden;\r\n                width: 12em;\r\n                display: flex;\r\n            }\r\n            .ig-logo {\r\n                width: 3em;\r\n                border-radius: 50%;\r\n                position: absolute;\r\n                bottom: 0;\r\n                right: 0;\r\n                border: 2px solid #fff;\r\n            }\r\n        }\r\n        .description {\r\n            padding: 0 2em 0 2em;\r\n            display: flex;\r\n            flex-direction: column;\r\n            color: var(--secondary-text-color);\r\n            font-size: 1.25em;\r\n            width: 60%;\r\n            .name {\r\n                color: var(--main-text-color)\r\n            }\r\n            .account {\r\n                display: flex;\r\n                align-items: center;\r\n                .type {\r\n                    padding: .25em 1em;\r\n                    background-color: var(--hastag-bg-color);\r\n                    color: var(--secondary-text-color);\r\n                    border-radius: .5em;\r\n                    height: max-content;\r\n                    margin-left: .5em;\r\n                }\r\n            }\r\n        }\r\n        .numbers-info {\r\n            .numbers {\r\n                display: flex;\r\n                h3 {\r\n                    display: block ruby; \r\n                }\r\n                >div {\r\n                    padding: 1em;\r\n                    span {\r\n                        color: var(--secondary-text-color);\r\n                    }\r\n                }\r\n            }\r\n            .engagement-data {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                align-items: center;\r\n                >div {\r\n                    text-align: center;\r\n                    width: max-content;\r\n                }\r\n                .engagement-values {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    margin-top: 1em;\r\n                    font-weight: 600;\r\n                    width: max-content;\r\n                    .range-active {\r\n                        border: 1px solid var(--soft-border-color);\r\n                        border-radius: .25em;\r\n                        background-color: var(--hastag-bg-color);\r\n                        padding: .25em 1em;\r\n                        &.successfully{\r\n                            //border-color: var(--successfully-color);\r\n                        }\r\n                        &.error{\r\n                            //border-color: var(--error-color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .ant-tabs-top > .ant-tabs-nav, .ant-tabs-bottom > .ant-tabs-nav, .ant-tabs-top > div > .ant-tabs-nav, .ant-tabs-bottom > div > .ant-tabs-nav {\r\n        margin: 0;\r\n    }\r\n    .ant-tabs-card.ant-tabs-top > .ant-tabs-nav .ant-tabs-tab, .ant-tabs-card.ant-tabs-top > div > .ant-tabs-nav .ant-tabs-tab {\r\n        border-radius: .75em .75em 0 0 ;\r\n        padding: 1em;\r\n    }\r\n    .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\r\n        color: var(--main-text-color);\r\n    }\r\n    .progress-children {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        .title {\r\n            font-size: .5em;\r\n        }\r\n        .value {\r\n            margin-bottom: .25em;\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst engagementValue = 2.4;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst AccountTabs = ({accounts, onChange, activeKey}) => {\r\n\r\n    const handleChange = (activeKey) => {\r\n        onChange(parseInt(activeKey))\r\n    }\r\n\r\n    const userTabTitle = (data) => {\r\n        return (\r\n            <TitleWrapper>\r\n                <span className='avatar-container'>\r\n                    <img src={data.profile_picture_url} alt=''/>\r\n                </span>\r\n                <span className='title'>{data.username}</span>\r\n            </TitleWrapper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TabsWrapper>\r\n            <Tabs\r\n                hideAdd\r\n                onChange={handleChange}\r\n                activeKey={`${activeKey}`}\r\n                type=\"editable-card\"\r\n            >\r\n                {accounts.map((pane, index) => (\r\n                    <TabPane tab={userTabTitle(pane)} key={`${index}`}>\r\n                        <div className='tab-content'>\r\n                            <div className='avatar-container'>\r\n                                <span><img src={pane.profile_picture_url} alt=''/></span>\r\n                                <span className='ig-logo'><img src={ig} alt=''/></span>\r\n                            </div>\r\n                            <div className='description'>\r\n                                <span className='account'><h3>{pane.username}</h3><span className='type'>{pane.type}</span></span>\r\n                                <span className='name'>{pane.name}</span>\r\n                                <span  style={{whiteSpace:'pre-line'}}>{pane.biography}</span>\r\n                                <span><a href={pane.website} target='_blank'>{pane.website}</a></span>\r\n                            </div>\r\n                            <div className='numbers-info'>\r\n                                <div className='numbers'>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.followers_count)}</h3>\r\n                                        <span>Followers</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.follows_count)}</h3>\r\n                                        <span>Followings</span> \r\n                                    </div>\r\n                                    <div>\r\n                                        <h3>{utils.getNumber(pane.media_count)}</h3>\r\n                                        <span>Posts</span> \r\n                                    </div>\r\n                                </div>\r\n                                <div className='engagement-data'>\r\n                                    <div>\r\n                                        <Progress type=\"circle\" percent={(utils.round(pane.engagement)/3.8)*100}  width={100} status={(((utils.round(pane.engagement)/3.8)*100)<100)?\"exception\":\"\"} format={()=><div className='progress-children'><span className='value'>{utils.round(pane.engagement)}</span><span className='title'>Engagement</span><span className='title'>rate</span></div>}/>\r\n                                        {/*<Progress type=\"circle\" percent={70} status=\"exception\" />*/}\r\n                                    </div>\r\n                                    <div className='engagement-values'>\r\n                                        {\r\n                                            EngagementValues.map((data, index)=>{\r\n                                                let flag = pane.followers_count>data.min && pane.followers_count<data.max;\r\n                                                return (\r\n                                                    <div key={index} className={flag?('range-active '+'error'):''}>\r\n                                                        {data.max>5000000000?`More than ${utils.getNumber(data.min)} followers: ${data.percent}`:`From ${utils.getNumber(data.min)} to ${utils.getNumber(data.max)} followers: ${data.percent}`}\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                ))}\r\n            </Tabs>\r\n        </TabsWrapper>\r\n    )\r\n}\r\n\r\nAccountTabs.defaultProps = {\r\n    accounts:[],\r\n}\r\n\r\nexport default AccountTabs;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst options = [\r\n    {\r\n        title:'Overview',\r\n        url:'/'\r\n    },\r\n    {\r\n        title:'Demographics',\r\n        url:'/demographics'\r\n    },\r\n    {\r\n        title:'Engagement',\r\n        url:'/engagement'\r\n    },\r\n    {\r\n        title:'Mentions',\r\n        url:'/mentions'\r\n    },\r\n    {\r\n        title:'Hashtag',\r\n        url:'/hashtag'\r\n    },\r\n    {\r\n        title:'Historic Stats',\r\n        url:'/historic'\r\n    },\r\n    {\r\n        title:'Posts',\r\n        url:'/posts'\r\n    },\r\n]\r\n\r\nconst HorizontalMenuWrapper = styled.div`\r\n    padding: 0 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    margin-bottom: 1em;\r\n    display: flex;\r\n    .menu-item {\r\n        font-weight: 600;\r\n        width: max-content;\r\n        padding: 1em 1em;\r\n        margin: 0 .5em;\r\n        display: block ruby;\r\n        color: var(--main-text-color);\r\n    }\r\n    .menu-item-active {\r\n        border-bottom: 2px solid var(--main-color);\r\n    }\r\n\r\n`;\r\n\r\nconst HorizontalMenu = () => {\r\n    return (\r\n        <HorizontalMenuWrapper>\r\n            {options.map((option,index)=>\r\n                <NavLink key={index} to={option.url} activeClassName='menu-item-active' exact>\r\n                    <div className={'pointer menu-item'}>\r\n                        {option.title}\r\n                    </div>\r\n                </NavLink>\r\n            )}\r\n        </HorizontalMenuWrapper>\r\n    )\r\n}\r\n\r\nexport default HorizontalMenu;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nconst InputWrapper = styled.input`\r\n    padding: .5em 2.5em .5em 1.5em;\r\n    background-color: var(--hastag-bg-color);\r\n    border: 1px solid var(--soft-border-color);\r\n    border-radius: .5em;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    position: relative;\r\n    .icon-container {\r\n        position: absolute;\r\n        right: 1em;\r\n        top: .5em;\r\n    }\r\n`;\r\n\r\nconst Input = ({placeholder, onChange}) => {\r\n\r\n    const hanldeChange = (e) => {\r\n        let value = e.target.value;\r\n        onChange({ value });\r\n    }\r\n\r\n    return (\r\n        <InputContainer>\r\n            <InputWrapper placeholder={placeholder} onChange={hanldeChange  }/>\r\n            <span className='icon-container'><SearchOutlined /></span>\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nInput.defaultProps = {\r\n    placeholder: '',\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Input from '../../Components/Input';\r\nimport axios from 'axios';\r\n\r\nconst HeaderWrapper = styled.div`\r\n\r\n    padding: 2em 4em;\r\n    background: var(--secondary-bg-color);\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .left-box {\r\n        display: flex;\r\n        .search-box {\r\n            margin-left: 1em;\r\n        }\r\n    }\r\n    .right-box {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n\r\n    const handleChange = (event) => {\r\n        /*const url='https://www.instagram.com/web/search/topsearch/?context=blended&query=${instaescuela}';\r\n        console.log(event.value);\r\n        let { value } = event;\r\n        axios({\r\n            method: \"POST\",\r\n            url: url,\r\n            data: { query: value },\r\n        })\r\n        .then(data => {\r\n        console.log(data)\r\n        })\r\n        .catch((error)=>{\r\n        console.error(error);\r\n        });*/\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <div className='left-box'>\r\n                <div>\r\n                    Logo\r\n                </div>\r\n                <div className='search-box'>\r\n                    <Input\r\n                        placeholder='Search accounts'\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='right-box'>\r\n                menu\r\n                <div>\r\n                    Avatar\r\n                </div>\r\n            </div>\r\n        </HeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardWrapper = styled.div`\r\n    padding: 0em;\r\n    margin: .5em;\r\n    border-radius: .5em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .title {\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        font-weight: 600;\r\n    }\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n`;\r\n\r\nconst Card = ({ children, title }) => {\r\n    return (\r\n        <CardWrapper>\r\n            {title?\r\n                <div className='title'>{title}</div>\r\n            :''}\r\n            <div className='content'>{ children }</div>\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\nCard.defaultProps = {\r\n    title:null,\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col } from 'antd';\r\nimport Card from '../../../Components/Card';\r\n\r\nconst OverviewWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Overview = () => {\r\n    return (\r\n        <OverviewWrapper>\r\n        <Row\r\n            gutter={[10, 10]}\r\n        >\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 6 }}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12}}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n            <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12}}>\r\n                <Card\r\n                >\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        </OverviewWrapper>\r\n    )\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button as ButtonAntd} from 'antd';\r\n\r\nconst ButtonWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    return (\r\n        <ButtonWrapper onClick={handleClick}>\r\n            <ButtonAntd>\r\n                { children }\r\n            </ButtonAntd>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    \r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ig from '../../Assets/Img/instagram.svg';\r\n\r\nconst AvatarWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    .avatar-image {\r\n        width: 3em;\r\n        height: 3em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    .ig-logo {\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        position: absolute;\r\n        left: 2.5em;\r\n        bottom: 0;\r\n    }\r\n    .user-name {\r\n        font-weight: 600;\r\n        margin-left: 1em;\r\n        font-size: 1em;\r\n    }\r\n`;\r\n\r\nconst Avatar = ({src, userName}) => {\r\n    return (\r\n        <AvatarWrapper>\r\n            <div className='avatar-image'>\r\n                <img src={src} alt='' />\r\n            </div>\r\n            <div className='ig-logo'>\r\n                <img src={ig} alt='' />\r\n            </div>\r\n            <div className='user-name'>{userName}</div>\r\n        </AvatarWrapper>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport utils from '../../Utils';\r\nimport Avatar from '../Avatar';\r\n\r\nconst PostWrapper = styled.div`\r\n    margin: .5em;\r\n    border-radius: 1em;\r\n    box-shadow: 10px -10px 150px rgba(0, 0, 0, 0.1);\r\n    background-color: var(--secondary-bg-color);\r\n    .content {\r\n        padding: 1em;\r\n    }\r\n    .header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1em;\r\n        border-bottom: 1px solid var(--soft-border-color);\r\n        .date {\r\n            color: var(--secondary-text-color)\r\n        }\r\n    }\r\n    .post-image {\r\n        position: relative;\r\n        display: flex;\r\n        .image-footer {\r\n            position: absolute;\r\n            bottom: .5em;\r\n            left: 1em;\r\n            display: flex;\r\n            .engagement, .media-type {\r\n                background-color: var(--secondary-bg-color);\r\n                box-shadow: 2px 5px 15px 3px rgba(0, 0, 0, 0.09);\r\n                padding: .5em 1em;\r\n                margin-right: 1em;\r\n                font-weight: 600;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Post = ({data, avatar, userName}) => {\r\n    if(data)\r\n        return (\r\n            <PostWrapper>\r\n                <div>\r\n                    <div className='header'>\r\n                        <div>\r\n                            <Avatar \r\n                                src={avatar}\r\n                                userName={userName}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                        <div className='date'>{utils.formatDate(data.timestamp)+''}</div>\r\n                    </div>\r\n                    <span className='post-image'>\r\n                        {data.media_type!=='VIDEO'?\r\n                            <img src={data.media_url} alt=''/>\r\n                        :\r\n                            <video src={data.media_url} alt='' controls=\"controls\"/>\r\n                        } \r\n                        <div className='image-footer'>\r\n                            {data.media_type!=='VIDEO'?\r\n                                <div className='media-type'>{data.media_type==='IMAGE'?'Photo':'Carousel'}</div>\r\n                                :\r\n                                <div className='media-type'>Video</div>\r\n                            }\r\n                            <div className='engagement'>{`${utils.round(data.engagement)}%`} Engagement</div>\r\n                        </div>\r\n                    </span>\r\n                    <div className='content'>\r\n                        {data.caption}\r\n                    </div>\r\n                </div>\r\n            </PostWrapper>\r\n        )\r\n    else \r\n        return (\r\n            ''\r\n        )\r\n}\r\n\r\nPost.defaultProps = {\r\n    data: null,\r\n}\r\n\r\nexport default Post;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\n\r\nimport Button from '../../../Components/Button';\r\nimport Post from '../../../Components/Post';\r\n\r\nconst PostsWrapper = styled.div`\r\n    .lazy-load-post-container {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 2em;\r\n    }\r\n`;\r\n\r\nconst Npost = 15;\r\n\r\nconst Posts = ({posts}) => {\r\n\r\n    const [postCount, setPostCount] = useState(Npost);\r\n\r\n    const handlePostCount = () => {\r\n        if((postCount+Npost)<posts.length) {\r\n            setPostCount(postCount+Npost);\r\n        }\r\n        else {\r\n            setPostCount(posts.length);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PostsWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                {posts.slice(0,postCount).map((data,index)=>{\r\n                    return (\r\n                        <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 8 }} key={index} style={{display: 'flex'}}>\r\n                            <Post\r\n                                data={data}\r\n                                avatar={'https://scontent-lga3-1.xx.fbcdn.net/v/t51.2885-15/36912147_333497493855464_191442841459752960_n.jpg?_nc_cat=1&ccb=1-3&_nc_sid=86c713&_nc_ohc=2NgT-kuv8WIAX8vrWJl&_nc_ht=scontent-lga3-1.xx&oh=1244dea710bdb805fa349297b351d186&oe=609D836E'}\r\n                                userName='instaescuela'\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            {postCount!==posts.length?\r\n            <div className='lazy-load-post-container'>\r\n                <Button onClick={handlePostCount}>\r\n                    Load more posts\r\n                </Button>\r\n            </div>\r\n            :''}\r\n        </PostsWrapper>\r\n    )\r\n}\r\n\r\nPosts.defaultProps = {\r\n    posts: [],\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Table } from 'antd';\r\nimport Utils from '../../../Utils';\r\n\r\nconst HistoricStatsWrapper = styled.div`\r\n    padding: 1em;\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: .5em;\r\n    .stats-container {\r\n        .bold {\r\n            font-weight: 600;\r\n        }\r\n        .less, .more {\r\n            padding: .25em;\r\n            border-radius: .25em;\r\n            margin-left: .25em;\r\n        }\r\n        .less {\r\n            color: var(--less-color);\r\n            background-color: var(--less-bg-color);\r\n        }\r\n        .more {\r\n            color: var(--more-color);\r\n            background-color: var(--more-bg-color);\r\n        }\r\n        .ant-table-thead > tr > th {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n  \r\nconst columns = [\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Follower Count',\r\n      dataIndex: 'followers_count',\r\n      key: 'followers_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Following Count',\r\n      dataIndex: 'following_count',\r\n      key: 'following_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Media Count',\r\n      dataIndex: 'media_count',\r\n      key: 'media_count',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {item.count}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Engagement Rate',\r\n      dataIndex: 'engagement_rate',\r\n      key: 'engagement_rate',\r\n      render: (item) => {\r\n        let diference = 0;\r\n        if(item.count!==item.prev_count && item.prev_count!==0)\r\n            diference = item.count-item.prev_count;\r\n        return (\r\n            <span className='bold'>\r\n                {Utils.round(item.count)}\r\n                {diference!==0?\r\n                    <span className={diference>0?'less':'less'}>{`${diference>0?'+':''}${diference}`}</span>\r\n                :''}\r\n            </span>\r\n        )\r\n      }\r\n    },\r\n];\r\n\r\nconst HistoricStats = ({ stats }) => {\r\n    let data = [...stats.map((item,index)=>{ \r\n        return {\r\n            key:index, \r\n            date: Utils.formatDate(item.date).split(/(\\d)*:/)[0], \r\n            followers_count:item.followers_count, \r\n            following_count: item.follows_count, \r\n            media_count:item.media_count,\r\n            engagement_rate: item.engagement_rate\r\n        }\r\n    })].reverse();\r\n\r\n    return (\r\n        <HistoricStatsWrapper>\r\n            <h3>Historic stats</h3>\r\n            <div className='stats-container'>\r\n                <Table dataSource={data} columns={columns} />\r\n            </div>\r\n        </HistoricStatsWrapper>\r\n    )\r\n}\r\n\r\nHistoricStats.defaultProps = {\r\n    stats:[]\r\n}\r\n\r\nexport default HistoricStats;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst DemographicsWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Demographics = () => {\r\n    return (\r\n        <DemographicsWrapper>\r\n            Demographics\r\n        </DemographicsWrapper>\r\n    )\r\n}\r\n\r\nexport default Demographics;","import React, {useLayoutEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst PieWrapper = styled.div`\r\n    .g2-html-annotation {\r\n        overflow: auto !important;\r\n        height: 1.5em;\r\n    }\r\n`;\r\n\r\nconst colors = [\r\n    '#16BBE5',\r\n    '#1CA7C2',\r\n    '#5C90A8',\r\n    '#55BD9A',\r\n    '#FCAD73',\r\n    '#F6D48D',\r\n    '#285981',\r\n    '#CF5E91',\r\n    '#C65880',\r\n    '#A26FA4',\r\n];\r\n\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n      function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n      }\r\n      window.addEventListener('resize', updateSize);\r\n      updateSize();\r\n      return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}\r\n\r\nconst PieChart = ({data, id}) => {\r\n    const [width, height] = useWindowSize();\r\n    const config = {\r\n        labels: [\r\n          ...data.map(item=>item.type)\r\n        ],\r\n        datasets: [{\r\n          label: 'My First Dataset',\r\n          data: [...data.map(item=>item.value)],\r\n          backgroundColor: [\r\n            ...colors\r\n          ],\r\n          hoverOffset: 4\r\n        }]\r\n    };\r\n    \r\n    const options = {\r\n        legend: {\r\n            position: (width>1140)?'right':'bottom',\r\n        },\r\n        //circumference: Math.PI,\r\n        //rotation: 1.0 * Math.PI,\r\n        cutoutPercentage: 70\r\n    }\r\n    \r\n    return (\r\n        <PieWrapper key={id}>\r\n            <Doughnut data={{...config}} options={options} width={50} height={50}/>\r\n        </PieWrapper>\r\n    )\r\n};\r\n\r\nPieChart.defaultProps = {\r\n    data: [],\r\n    id:0,\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Row, Col} from 'antd';\r\nimport Card from '../../../Components/Card';\r\nimport Utils from '../../../Utils';\r\n\r\nimport PieChart from '../../../Components/PieChart';\r\n\r\n\r\nconst HashtagWrapper = styled.div`\r\n    .hashtag-container {\r\n        width: 100%;\r\n        display: inline-block;\r\n        .hashtag-item {\r\n            width: max-content;\r\n            display: flex;\r\n            float: left;\r\n            padding: .25em .5em;\r\n            margin: .25em;\r\n            background-color: var(--hastag-bg-color);\r\n            border-radius: .5em;\r\n            border: 1px solid var(--soft-border-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Hashtag = ({ hashtag, count, key}) => {\r\n    return (\r\n        <HashtagWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }} style={{display: 'flex'}}>\r\n                    <Card\r\n                        title={'Top 10 hashtags'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.slice(0,10).map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            {`#${data.caption} ${Utils.round((data.count/count)*100)}%`} \r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Hashtags'}\r\n                    >\r\n                        <PieChart\r\n                            data={hashtag.slice(0,10).map(data=>{return {value: data.count, type: '#'+data.caption}})}\r\n                            id={ key }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 24}} lg={{ span: 24 }}>\r\n                    <Card\r\n                        title={'Hashtag used in the last 90 posts'}\r\n                    >\r\n                        <div className='hashtag-container'>\r\n                            {\r\n                                hashtag.map((data, index)=>{\r\n                                    return (\r\n                                        <span className='hashtag-item' key={index}>\r\n                                            #{ data.caption }\r\n                                        </span>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </HashtagWrapper>\r\n    )\r\n}\r\n\r\nHashtag.defaultProps = {\r\n    hashtag:[],\r\n    hashtag_count: 0,\r\n}\r\n\r\nexport default Hashtag;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst ChartWrapper = styled.div`\r\n\r\n`;\r\n\r\nconst BarChart = ({ title, data, id }) => {\r\n\r\n  const [chartConf, setChartConf] = useState({\r\n        labels: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\r\n        datasets: [\r\n          {\r\n            label: title,\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: '#ff4d4f',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: data,\r\n          }\r\n        ]\r\n    }\r\n  ) \r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return tooltipItem.yLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setChartConf({...chartConf, datasets: [{...chartConf.datasets[0], data: data}]});\r\n  },[ data ])\r\n\r\n  return (\r\n    <ChartWrapper key={id}>\r\n      <Bar\r\n        data={{...chartConf}} \r\n        options={{...options}}\r\n      />\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nBarChart.defaultProps = {\r\n    title: '',\r\n    id: 0,\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst ChartWrapper = styled.div`\r\n\r\n`;\r\n\r\n\r\nconst LineChart = ({ title }) => {\r\n\r\nconst data = {\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        backgroundColor: '#ff4d4f',\r\n        borderColor: '#ff4d4f',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: '#ff4d4f',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: '#ff4d4f',\r\n        pointHoverBorderColor: '#ff4d4f',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40]\r\n      }\r\n    ]\r\n  };\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(tooltipItem) {\r\n          return tooltipItem.yLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <ChartWrapper>\r\n      <Line\r\n        options={{...options}}\r\n        data={{...data}} \r\n      />\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nLineChart.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Tooltip } from 'antd';\r\nimport Utils from '../../../Utils';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nimport Card from '../../../Components/Card';\r\nimport BarChart from '../../../Components/BarChart';\r\nimport LineChart from '../../../Components/LineChart';\r\n\r\nconst EngagementWrapper = styled.div`\r\n    \r\n    .average-card {\r\n        padding: 0 1em 1em 1em;\r\n        h2 {\r\n            font-size: 3em;\r\n            font-weight: 600;\r\n            margin: .5em .5em .25em 0;\r\n        }\r\n        .title-container {\r\n            font-weight: 600;\r\n            display:  flex;\r\n            align-items: center;\r\n            font-size: 1.25em;\r\n            .icon-container {\r\n                color: var(--secondary-text-color);\r\n                margin-left: .5em;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst EngagementValues = [\r\n    {\r\n        min: 100,\r\n        max: 500,\r\n        percent: 11.5\r\n    },\r\n    {\r\n        min: 500,\r\n        max: 1000,\r\n        percent: 8.4\r\n    },\r\n    {\r\n        min: 1000,\r\n        max: 5000,\r\n        percent: 5.7\r\n    },\r\n    {\r\n        min: 5000,\r\n        max: 10000,\r\n        percent: 4.2\r\n    },\r\n    {\r\n        min: 10000,\r\n        max: 50000,\r\n        percent: 3.8\r\n    },\r\n    {\r\n        min: 50000,\r\n        max: 50000000000,\r\n        percent: 1.9\r\n    },\r\n];\r\n\r\nconst EngagementBar = styled.div`\r\n    width: 100%;\r\n    padding: 1em 1em 2em 1em;\r\n    .engagement-bar {\r\n        height: 1.5em;\r\n        width: 100%;\r\n        border-radius: .25em;\r\n        background-color: var(--error-color);\r\n        position: relative;\r\n        .status-bar-container {\r\n            position: absolute;\r\n            top: -.25em;\r\n            left: 0;\r\n            left: ${props => props.barPercent ? props.barPercent : 'auto'};\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            color: var(--error-color);\r\n            .status-bar {\r\n                width: 1em;\r\n                height: 2em;\r\n                background-color: var(--secondary-bg-color);\r\n                border: 1px solid var(--soft-border-color);\r\n                border-radius: .25em; \r\n                position: relative;\r\n                &::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    height: 1em;\r\n                    border-left: 2px dotted var(--less-color);\r\n                    z-index: 1;\r\n                    width: 2px;\r\n                    top: -1em;\r\n                    left: calc(1em / 2 - 2px);\r\n                }\r\n                &::after {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    height: 1em;\r\n                    border-left: 2px dotted var(--less-color);\r\n                    z-index: 1;\r\n                    width: 2px;\r\n                    bottom: -1em;\r\n                    left: calc(1em / 2 - 2px);\r\n                }\r\n            }\r\n            .engagement-value {\r\n                padding: .25em .5em;\r\n                margin-top: 1.25em;\r\n                border-radius: .25em;\r\n                background-color: var(--less-bg-color);\r\n                font-weight: 600;\r\n                position: absolute;\r\n                bottom: -3.5em;\r\n            }\r\n        }\r\n    }\r\n    .range-values {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        margin-top: .5em;\r\n        color: var(--error-color);\r\n        font-weight: 600;\r\n    }\r\n    &.positive {\r\n        .engagement-bar {\r\n            background-color: var(--successfully-color);\r\n            .status-bar-container {\r\n                .status-bar {\r\n                    &::before {\r\n                        border-left: 2px dotted var(--more-color);\r\n                    }\r\n                    &::after {\r\n                        border-left: 2px dotted var(--more-color);\r\n                    }\r\n                }\r\n                .engagement-value {\r\n                    color: var(--successfully-color);\r\n                    background-color: var(--more-bg-color);\r\n                }\r\n            }\r\n        }\r\n        .range-values {\r\n            color: var(--successfully-color);\r\n            .min {\r\n\r\n            }\r\n            .max {\r\n                position: absolute;\r\n                left: ${props=>props.maxValuePosition?props.maxValuePosition:'0'};\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Engagement = ({ averageLikes, averageComment, averageEngagement, postingHabits, engagement, followers, key}) => {\r\n    const engagementRange = EngagementValues.filter(data=>data.max>followers && followers>data.min)[0];\r\n    const isPositive = engagement>engagementRange.percent;\r\n    const percentage = Utils.round(engagement/engagementRange.percent*100,0);\r\n    return (\r\n        <EngagementWrapper>\r\n            <Row\r\n                gutter={[10, 10]}\r\n            >\r\n                <Col xs={{ span: 24 }} md={{span: 24}} lg={{ span: 24 }}>\r\n                    <Card\r\n                        title='Engagement rate'\r\n                    >\r\n                        <EngagementBar\r\n                            barPercent={`calc(${percentage>100?100:percentage}% - .5em)`}\r\n                            maxValuePosition={`${percentage>100?(100/percentage*100):100}%`}\r\n                            className={isPositive?'positive':''}\r\n                        >\r\n                            <div className='engagement-bar '>\r\n                                <div className='status-bar-container'>\r\n                                    <span className='status-bar'></span>\r\n                                    <span className='engagement-value'>{Utils.round(engagement)}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className='range-values'>\r\n                                <span className='min'>0</span>\r\n                                <span className='max'>{engagementRange.percent}</span>\r\n                            </div>\r\n                        </EngagementBar>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card>\r\n                        <div className='average-card'>\r\n                            <h2>{Utils.round(averageLikes)}</h2>\r\n                            <div className='title-container'>\r\n                                Average likes \r\n                                <Tooltip placement=\"top\" title={'The average number of likes received on all types of 90 last posts'}>\r\n                                    <span className='icon-container'><InfoCircleOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card>\r\n                        <div className='average-card'>\r\n                            <h2>{Utils.round(averageComment)}</h2>\r\n                            <div className='title-container'>\r\n                                Average comments \r\n                                <Tooltip placement=\"top\" title={'The average number of comments received on all types of 90 last posts'}>\r\n                                    <span className='icon-container'><InfoCircleOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Average engagement'}\r\n                    >\r\n                        <LineChart\r\n                            data={averageEngagement}\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} md={{span: 12}} lg={{ span: 12 }}>\r\n                    <Card\r\n                        title={'Posting habits'}\r\n                    >\r\n                        <BarChart\r\n                            title = {'Posting habits '}\r\n                            data = { postingHabits }\r\n                            id={ key }\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </EngagementWrapper>\r\n    )\r\n}\r\n\r\nexport default Engagement;","import { useContext, createContext } from \"react\";\r\n\r\nconst usersContext = createContext([]);\r\n\r\nfunction useUsers() {\r\n    return useContext(usersContext);\r\n  }\r\n\r\nexport {usersContext, useUsers}","import 'antd/dist/antd.css';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport AccountTabs from './Containers/AccountTabs';\nimport HorizontalMenu from './Containers/HorizontalMenu';\nimport Header from './Containers/Header';\n\nimport Overview from './Pages/Public/Overview';\nimport Posts from './Pages/Public/Posts';\nimport HistoricStats from './Pages/Public/HistoricStats';\nimport Demographics from './Pages/Public/Demographics';\nimport Hashtag from './Pages/Public/Hashtag';\nimport Engagement from './Pages/Public/Engagement';\n\nimport axios from 'axios';\nimport { usersContext } from './Context';\n\nconst url='https://boiling-coast-31813.herokuapp.com/getProfile';\n\nfunction App() {\n\n  const [state, setState] = useState({\n    accounts:[],\n    userActive:null,\n    indexActive:0\n  })\n\n  useEffect(()=>{\n\n    axios({\n      method: \"POST\",\n      url: url,\n      data: {username:\"instaescuela\"},\n      headers: {\n          'Content-Type': 'application/json',\n      },\n    })\n    .then(data => {\n      if(data && !data.data.error){\n        console.log(data.data.business_discovery);\n        let aux = state.accounts.slice(0);\n        aux.push(data.data.business_discovery);\n        let users;\n        if(!state.userActive)\n          users = {...state, accounts:aux, userActive: aux[0] };\n        else\n          users = {...state, accounts:aux, userActive: aux[aux.length-1], indexActive:aux.length-1 };\n        setState(users);\n      }\n    })\n    .catch((error)=>{\n      console.error('error',error)\n    });\n    \n  },[]);\n\n  const handleChangeUser = (index) => {\n    setState({...state, userActive: state.accounts[index], indexActive:index});\n  }\n\n  return (\n    <usersContext.Provider value={state}>\n      <div className='App'>\n        <Header/>\n        <div style={{padding: '2em 4em'}}>\n          <Router>\n            <AccountTabs\n              accounts={state.accounts}\n              onChange={handleChangeUser}\n              activeKey={state.indexActive}\n            /> \n            <HorizontalMenu/>\n            <Switch>\n              <Route path=\"/\" exact>\n                {state.userActive?\n                <React.Fragment>\n                  <Overview \n                    \n                  />\n                  <Engagement\n                    averageLikes = {state.userActive.average_likes}\n                    averageComment = {state.userActive.average_comments}\n                    averageEngagement = {[]}\n                    postingHabits = {state.userActive.posting_habit_count}\n                    engagement = {state.userActive.engagement}\n                    followers = {state.userActive.followers_count}\n                    key={state.indexActive}\n                  />\n                </React.Fragment>\n                :''}\n              </Route>\n              <Route path=\"/posts\">\n                {state.userActive?\n                <Posts \n                  posts={state.userActive.media.data}\n                />\n                :''}\n              </Route>\n              <Route path=\"/historic\">\n                {state.userActive?\n                <HistoricStats\n                  stats={state.userActive.stats}\n                />\n                :''}\n              </Route>\n              <Route path=\"/demographics\">\n                <Demographics/>\n              </Route>\n              <Route path=\"/hashtag\">\n                {state.userActive?\n                <Hashtag\n                  hashtag={state.userActive.hashtag}\n                  count={state.userActive.hashtag_count}\n                  key={state.indexActive}\n                />\n                :''\n                }\n              </Route>\n              <Route path=\"/engagement\">\n                {state.userActive?\n                <Engagement\n                  averageLikes = {state.userActive.average_likes}\n                  averageComment = {state.userActive.average_comments}\n                  averageEngagement = {[]}\n                  postingHabits = {state.userActive.posting_habit_count}\n                  engagement = {state.userActive.engagement}\n                  followers = {state.userActive.followers_count}\n                  key={state.indexActive}\n                />\n                :'cargando'\n                }\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </usersContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}